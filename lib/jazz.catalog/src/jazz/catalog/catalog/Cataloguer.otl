(module jazz.catalog.catalog.Cataloguer jazz
  (import (jazz.catalog))
  (import (jazz.feedback))
  (class Cataloguer extends Object
    (slot catalogs getter generate)
    (method public virtual (for-each-active-catalog self context proc))
    (method public virtual (add-catalog self catalog))
    (method public virtual (remove-catalog self catalog))
    (method public (get-catalog self name (error?: error? (unspecified))))
    (method public virtual (find-catalogs self name))
    (method public (find-active-catalog self name))
    (method public (save-catalogs self))
    (definition (get-context))
    (method public (get-definitions self name (context: context (unspecified))))
    (method public (get-definition self name))
    (method public (get-toplevel-definition self name))
    (method public (get-coalesced-definitions self name (context: context (unspecified))))
    (method public (search-definitions self search-set (context: context (unspecified))))
    (method public (search-references self search-set (context: context (unspecified))))
    (method public (get-references self name (context: context (unspecified))))
    (method public (get-filename-entries self name (context: context (unspecified))))
    (method public (get-file-entries self file (context: context (unspecified))))
    (method public (get-file-entry self file (context: context (unspecified))))
    (method public (get-completions self name (context: context (unspecified))))
    (method public (add-completions self table name (context: context (unspecified)))))
  (hub get-catalogs)
  (hub for-each-active-catalog)
  (hub add-catalog)
  (hub remove-catalog)
  (hub get-catalog)
  (hub find-catalogs)
  (hub find-active-catalog)
  (hub save-catalogs)
  (hub get-definitions)
  (hub get-definition)
  (hub get-toplevel-definition)
  (hub get-coalesced-definitions)
  (hub search-definitions)
  (hub search-references)
  (hub get-references)
  (hub get-filename-entries)
  (hub get-file-entries)
  (hub get-file-entry)
  (hub get-completions)
  (hub add-completions))
