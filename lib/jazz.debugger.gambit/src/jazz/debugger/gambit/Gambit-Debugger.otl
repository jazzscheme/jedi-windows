(module jazz.debugger.gambit.Gambit-Debugger jazz
  (import (jazz.debugger))
  (import (jazz.debugger.gambit))
  (import (jazz.feedback))
  (class Gambit-Debugger extends Debugger
    (method override (start-debugger self))
    (method override (stop-debugger self))
    (method override (get-processes self (validate-liveness?: validate-liveness? (unspecified))))
    (method override (detach-processes self))
    (method override (process=? self x y))
    (method override (process-live? self process))
    (method override (process-title self process))
    (method override (process-icon self process))
    (method override (process-threads self process))
    (method override (present-process self process))
    (method override (evaluate-expressions self process syntax string container line col evaluation-mode walk-debugger walk-cookie))
    (method override (process-detach self process))
    (method override (process-quit self process))
    (method override (get-thread-name self thread))
    (method override (get-thread-state self thread))
    (method override (get-thread-priority self thread))
    (method override (get-thread-id self thread))
    (method override (get-thread-stops self thread))
    (method override (break-thread self process thread))
    (method override (repl-thread self process thread))
    (method override (terminate-thread self process thread preserve-console?))
    (method override (thread-debugged-continuation? self thread))
    (method override (restart-stop self process restart))
    (method override (stop-kind self stop))
    (method override (stop-reason self stop))
    (method override (stop-frames self stop))
    (method override (continue-stop self process stop))
    (method override (step-stop self process stop command))
    (method override (frame-name self frame))
    (method override (frame-location self frame))
    (method override (frame-variables self frame))
    (method override (frame-variable-name self frame variable))
    (method override (frame-variable-value self frame variable))))
