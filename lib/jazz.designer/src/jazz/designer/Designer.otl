(module jazz.designer.Designer jazz
  (import (jazz.application))
  (import (jazz.clipboard))
  (import (jazz.component))
  (import (jazz.descriptor))
  (import (jazz.designer))
  (import (jazz.editor))
  (import (jazz.editor.jazz))
  (import (jazz.event))
  (import (jazz.figure))
  (import (jazz.handler))
  (import (jazz.io))
  (import (jazz.markup))
  (import (jazz.platform))
  (import (jazz.preferences))
  (import (jazz.reporter))
  (import (jazz.runtime))
  (import (jazz.text))
  (import (jazz.ui.dialog))
  (import (jazz.undoer))
  (import (jazz.view))
  (class Designer extends Former
    (slot listeners)
    (slot undoer getter generate)
    (method override (initialize self (form: form (unspecified)) (reference: reference (unspecified))))
    (definition Default-Extension)
    (definition Default-Extensions)
    (method override (save-as self (default-extension: default-extension (unspecified)) (extensions: extensions (unspecified))))
    (method override (save-destination self destination))
    (method (save-to-class self class))
    (method (save-to-reference self reference))
    (method (save-to-trait self unit symbol))
    (method public (saved-form self . rest))
    (method public (print-to self . rest))
    (method override (imports-to-insert self form include-modules exclude-modules))
    (method public virtual (set-default-traits self component traits-references (trait: trait (unspecified)) (design-events?: design-events? (unspecified)) (undoable?: undoable? (unspecified)) (imports: imports (unspecified))))
    (method override (setting-name self branch component name design-events? undoable? thunk))
    (method override (setting-property self branch component property value design-events? undoable?))
    (method override (remove-property-event self branch component property value design-events? undoable?))
    (method override (add-child-event self child parent design-events? descendant?))
    (method override (remove-child-event self child parent design-events?))
    (method public virtual (send-before self child target (trait: trait (unspecified))))
    (method public (send-to-back self child (trait: trait (unspecified))))
    (method public (bring-to-front self child (trait: trait (unspecified))))
    (method public virtual (add-form self form parent (trait: trait (unspecified)) (name: name (unspecified)) (imports: imports (unspecified)) (design-events?: design-events? (unspecified)) (descendant?: descendant? (unspecified))))
    (method public virtual (apply-form self form component (trait: trait (unspecified)) (design-events?: design-events? (unspecified))))
    (method override (remove-components self components))
    (method public (relocate-component self component destination (trait: trait (unspecified)) (design-events?: design-events? (unspecified))))
    (method public virtual (relocate-components self components destination (trait: trait (unspecified)) (design-events?: design-events? (unspecified))))
    (method public (component-relocatable? self component destination))
    (method public (components-relocatable? self components destination))
    (method public virtual (purge-trait self component (trait: trait (unspecified)) (design-events?: design-events? (unspecified))))
    (method override (register-undo self proc))
    (method public virtual (cut-components self components))
    (method public virtual (copy-components self components))
    (method public (copy-components-text self components (trait: trait (unspecified))))
    (method public virtual (paste-clipboard self parent (trait: trait (unspecified)) (design-events?: design-events? (unspecified))))
    (method public virtual (paste-parcels self parcels parent (trait: trait (unspecified)) (design-events?: design-events? (unspecified)) (reporter: reporter (unspecified))))
    (method public virtual (paste-properties self components (trait: trait (unspecified)) (design-events?: design-events? (unspecified))))
    (method public (paste-parcel-properties self parcel components (trait: trait (unspecified)) (design-events?: design-events? (unspecified))))
    (method public virtual (delete-components self components (trait: trait (unspecified)) (design-events?: design-events? (unspecified))))
    (method public virtual (delete-component self component (trait: trait (unspecified)) (design-events?: design-events? (unspecified))))
    (method (remove-redundant-descendants self components))
    (method public (package-component self component (trait: trait (unspecified))))
    (method public (package-components self components (trait: trait (unspecified))))
    (method public virtual (instantiate-parcels self parcels parent (trait: trait (unspecified)) (name-resolution: name-resolution (unspecified)) (design-events?: design-events? (unspecified)) (descendant?: descendant? (unspecified)) (reporter: reporter (unspecified))))
    (method public virtual (instantiate-parcel self parcel parent (trait: trait (unspecified)) (name-resolution: name-resolution (unspecified)) (design-events?: design-events? (unspecified)) (descendant?: descendant? (unspecified))))
    (method public virtual (instantiate-form self name name-resolution form parent trait design-events? descendant? (imports: imports (unspecified))))
    (method public virtual (instantiate-content self form component trait design-events?))
    (method public virtual (instantiate-component self name name-resolution form parent trait design-events? descendant? (imports: imports (unspecified))))
    (method public virtual (instantiate-new-component self name form parent trait design-events? descendant? (imports: imports (unspecified))))
    (method public virtual (instantiate-properties self component properties trait design-events?))
    (method public virtual (instantiate-children self component children trait design-events?))
    (method public virtual (transfer-components self components destination (trait: trait (unspecified))))
    (method protected virtual (unique-name self name domain))
    (method protected virtual (unique-separator self))
    (definition (name-conflicts names children))
    (method public (verify-name-conflicts self parcels destination))
    (method public virtual (add-view self child parent . rest))
    (method public (center-child self child))
    (method public (cascade-view-position self view initial))
    (method public (get-name self path (trait: trait (unspecified))))
    (method public (get-property self path property (trait: trait (unspecified))))
    (method public (safe-set-property self . rest))
    (method public (add-designer-listener self listener))
    (method public (remove-designer-listener self listener))
    (method package (process-name-change self component name old-name undoable?))
    (method package (process-presentation-change self component presentation old-presentation undoable?))
    (method package (process-property-change self branch component property value undoable?))
    (method package (process-child-add self child parent descendant?))
    (method package (process-child-remove self child parent))
    (method package (process-child-relocate self child parent destination))
    (method package (process-send-before self child parent target))
    (method public (process-refresh self component what))
    (method public (process-user-event self event)))
  (hub get-undoer)
  (hub saved-form)
  (hub print-to)
  (hub set-default-traits)
  (hub send-before)
  (hub send-to-back)
  (hub bring-to-front)
  (hub add-form)
  (hub apply-form)
  (hub relocate-component)
  (hub relocate-components)
  (hub component-relocatable?)
  (hub components-relocatable?)
  (hub purge-trait)
  (hub cut-components)
  (hub copy-components)
  (hub copy-components-text)
  (hub paste-clipboard)
  (hub paste-parcels)
  (hub paste-properties)
  (hub paste-parcel-properties)
  (hub delete-components)
  (hub delete-component)
  (hub package-component)
  (hub package-components)
  (hub instantiate-parcels)
  (hub instantiate-parcel)
  (hub instantiate-form)
  (hub instantiate-content)
  (hub instantiate-component)
  (hub instantiate-new-component)
  (hub instantiate-properties)
  (hub instantiate-children)
  (hub transfer-components)
  (hub unique-name)
  (hub unique-separator)
  (hub verify-name-conflicts)
  (hub add-view)
  (hub center-child)
  (hub cascade-view-position)
  (hub get-name)
  (hub get-property)
  (hub safe-set-property)
  (hub add-designer-listener)
  (hub remove-designer-listener)
  (hub process-name-change)
  (hub process-presentation-change)
  (hub process-property-change)
  (hub process-child-add)
  (hub process-child-remove)
  (hub process-child-relocate)
  (hub process-send-before)
  (hub process-refresh)
  (hub process-user-event)
  (class Designer-Event extends Event))
