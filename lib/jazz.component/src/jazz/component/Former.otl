(module jazz.component.Former jazz
  (import (jazz.component))
  (import (jazz.feedback))
  (import (jazz.io))
  (import (jazz.markup))
  (import (jazz.reference))
  (import (jazz.runtime))
  (import (jazz.version))
  (class Former extends Object
    (slot form accessors generate)
    (slot reference getter generate)
    (slot modified? accessors generate)
    (method override (initialize self (form: form (unspecified)) (reference: reference (unspecified))))
    (method public virtual (save self . rest))
    (method public virtual (save-to self file . rest))
    (method package virtual (save-as self . rest))
    (method package (save-content self destination))
    (method protected virtual (save-destination self destination))
    (method (save-to-file self file))
    (method package (save-to-port self output))
    (method protected virtual (imports-to-insert self form include-modules exclude-modules))
    (method package (reset-modified? self))
    (method public virtual (set-name self component name (trait: trait (unspecified)) (design-events?: design-events? (unspecified)) (undoable?: undoable? (unspecified))))
    (method protected virtual (setting-name self branch component name design-events? undoable? thunk))
    (method public virtual (set-property self component/path property value (old-value: old-value (unspecified)) (trait: trait (unspecified)) (design-events?: design-events? (unspecified)) (undoable?: undoable? (unspecified)) (import: import (unspecified))))
    (method protected virtual (setting-property self branch component property value design-events? undoable?))
    (method (purge-form self form))
    (method public virtual (remove-property self component/path property default-value (trait: trait (unspecified)) (design-events?: design-events? (unspecified)) (undoable?: undoable? (unspecified))))
    (method protected virtual (remove-property-event self branch component property value design-events? undoable?))
    (method public virtual (add-import self import))
    (method public virtual (add-child self child parent (undoable?: undoable? (unspecified)) (form: form (unspecified)) (trait: trait (unspecified)) (name: name (unspecified)) (properties: properties (unspecified)) (tag-reference: tag-reference (unspecified)) (import: import (unspecified)) (design-events?: design-events? (unspecified)) (descendant?: descendant? (unspecified))))
    (method protected virtual (add-child-event self child parent design-events? descendant?))
    (method public virtual (remove-child self child (trait: trait (unspecified)) (design-events?: design-events? (unspecified))))
    (method protected virtual (remove-child-event self child parent design-events?))
    (method public virtual (remove-components self components))
    (method public (remove-children self parent (trait: trait (unspecified)) (design-events?: design-events? (unspecified))))
    (method public virtual (register-undo self proc))
    (method (find-form self component branch (restore?: restore? (unspecified)) (error?: error? (unspecified))))
    (method (target-branch self trait))
    (method public virtual (component-owned-by-reference? self component))
    (method public (component-in-descendants? self component))
    (method public (descendant-owned-by-reference? self component))
    (method public (find-owner self component (property (unspecified))))
    (method (find-next-branch self branch component property)))
  (hub get-form)
  (hub set-form)
  (hub get-reference)
  (hub get-modified?)
  (hub set-modified?)
  (hub save)
  (hub save-to)
  (hub save-as)
  (hub save-content)
  (hub save-destination)
  (hub save-to-port)
  (hub imports-to-insert)
  (hub reset-modified?)
  (hub set-name)
  (hub setting-name)
  (hub set-property)
  (hub setting-property)
  (hub remove-property)
  (hub remove-property-event)
  (hub add-import)
  (hub add-child)
  (hub add-child-event)
  (hub remove-child)
  (hub remove-child-event)
  (hub remove-components)
  (hub remove-children)
  (hub register-undo)
  (hub component-owned-by-reference?)
  (hub component-in-descendants?)
  (hub descendant-owned-by-reference?)
  (hub find-owner))
