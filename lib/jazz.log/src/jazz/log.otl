(module jazz.log jazz
  (import (jazz.io))
  (import (jazz.markup))
  (hub clear)
  (hub get-file)
  (hub get-name)
  (hub get-toplevel-nodes)
  (hub log-log-entry)
  (hub log-log-node)
  (hub log-with-node)
  (hub new-entry)
  (hub reload)
  (class Log extends Object
    (slot name getter generate)
    (slot file getter generate)
    (slot last-mark)
    (slot read-error?)
    (slot current-node getter generate)
    (slot toplevel-nodes)
    (slot keep-nodes?)
    (method override (initialize self (name: name (unspecified)) (file: file (unspecified)) (load?: load? (unspecified)) (keep-nodes?: keep-nodes? (unspecified))))
    (method override (print self output readably))
    (method public (get-toplevel-nodes self))
    (method public (reload self))
    (method (load-toplevel-nodes self))
    (method (add-toplevel-node self node))
    (method (output-toplevel-node self node))
    (method public (log-with-node self node proc))
    (method public (log-log-node self node))
    (method public (log-log-entry self tag name message (class: class (unspecified)) (data: data (unspecified)) (location: location (unspecified)) (properties: properties (unspecified))))
    (method public (new-entry self tag name message (class: class (unspecified)) (data: data (unspecified)) (location: location (unspecified)) (properties: properties (unspecified))))
    (method public (clear self)))
  (hub get-current-node)
  (definition Logs)
  (definition package (get-logs))
  (definition package (timestamped-log (prefix (unspecified))))
  (definition with-add-log-mutex)
  (definition package (add-log log))
  (definition package (effective-log))
  (definition (default-log))
  (definition public current-log)
  (definition public (with-log log thunk (name: name (unspecified)) (file: file (unspecified))))
  (definition public (with-node proc (node: node (unspecified)) (tag: tag (unspecified)) (name: name (unspecified)) (message: message (unspecified)) (data: data (unspecified)) (log: log (unspecified))))
  (definition public (log-node node (log: log (unspecified))))
  (definition public (log-entry (tag: tag (unspecified)) (name: name (unspecified)) (message: message (unspecified)) (data: data (unspecified)) (log: log (unspecified))))
  (definition public (log-properties properties (tag: tag (unspecified)) (name: name (unspecified)) (message: message (unspecified)) (data: data (unspecified)) (log: log (unspecified))))
  (definition public (new-log-node (tag: tag (unspecified)) (name: name (unspecified)) (message: message (unspecified)) (data: data (unspecified)) (log: log (unspecified)))))
