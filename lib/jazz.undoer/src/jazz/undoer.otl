(module jazz.undoer jazz
  (import (jazz.application))
  (hub can-redo?)
  (hub can-undo?)
  (hub end-atomic-undo)
  (hub redo)
  (hub register-undo)
  (hub reset)
  (hub reset-save-depth)
  (hub set-preserve-state)
  (hub set-reset-modified)
  (hub set-restore-state)
  (hub start-atomic-undo)
  (hub undo)
  (hub with-atomic-undo)
  (class Undoer extends Object
    (slot preserve-state accessors generate)
    (slot restore-state accessors generate)
    (slot reset-modified accessors generate)
    (slot undo-list getter generate)
    (slot redo-list)
    (slot undoing?)
    (slot redoing?)
    (slot atomic?)
    (slot atomic-actions)
    (slot save-depth)
    (method override (initialize self (preserve-state: preserve-state (unspecified)) (restore-state: restore-state (unspecified)) (reset-modified: reset-modified (unspecified))))
    (method public (reset-save-depth self))
    (method public (reset self))
    (method public (register-undo self action (reset (unspecified)) (preserve? (unspecified))))
    (method public (can-undo? self))
    (method public (can-redo? self))
    (method public (undo self))
    (method public (redo self))
    (method public virtual (play-action self action))
    (method (preserving-action self action))
    (method public (with-atomic-undo self proc))
    (method public (start-atomic-undo self))
    (method public (end-atomic-undo self preserved (completed? (unspecified))))
    (method (register-atomic-action self action)))
  (hub get-preserve-state)
  (hub get-restore-state)
  (hub get-reset-modified)
  (hub get-undo-list)
  (hub play-action))
