(module jazz.text.Text-Style jazz
  (import (jazz.exemplar))
  (import (jazz.graphic))
  (import (jazz.text))
  (class Text-Style extends Style
    (slot _font)
    (slot _color)
    (slot _highlight)
    (slot _frame)
    (method override (get-attributes self))
    (method override (get-attribute self #:attr^2))
    (method override (set-attribute self #:attr^2 #:val^3))
    (method override (get-attribute-default self #:attr^2))
    (method override (get-attribute-no-default self #:attr^2))
    (method override (attribute=? self #:attr^2 x y))
    (method override (get self #:attr^2))
    (method override (set self #:attr^2 #:val^3))
    (method public (get-font self))
    (method public (set-font self #:val^3))
    (method public (get-color self))
    (method public (set-color self #:val^3))
    (method public (get-highlight self))
    (method public (set-highlight self #:val^3))
    (method public (get-frame self))
    (method public (set-frame self #:val^3))
    (method override (get-height self))
    (method override (run-width self run))
    (method override (scan self h <fx> start <fx> end <fx> tabs run <Run> proc))
    (definition Break-Characters)
    (method override (wrap self context margin h <fx> v <fx> width <fx> tabs place break run <Run>))
    (method override (height-update self height))
    (method override (draw-style self surface <Surface> context string <Sequence> h <fx> v <fx> line-height <fx> tabs left <fx> enabled? <bool>) <fx>))
  (hub get-font)
  (hub set-font)
  (hub get-color)
  (hub set-color)
  (hub get-highlight)
  (hub set-highlight)
  (hub get-frame)
  (hub set-frame))
