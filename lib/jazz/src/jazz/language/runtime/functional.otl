(module jazz.language.runtime.functional jazz.dialect
  (import (jazz.language.runtime.hubs))
  (import (jazz.language.runtime.kernel))
  (import (jazz.language.runtime.object))
  (import (irregex))
  (native private jazz:error)
  (native private jazz:system-format)
  (class Module extends Object
    (slot name getter generate)
    (slot access getter generate)
    (slot exports getter generate)
    (slot entries getter generate)
    (method override (print self output detail)))
  (hub get-name)
  (hub get-access)
  (hub get-exports)
  (hub get-entries)
  (class Field extends Object
    (slot name getter generate)
    (method override (print self output detail))
    (method package virtual abstract (field-locator self))
    (method package virtual abstract (field-ref self))
    (method package virtual abstract (field-set! self value)))
  (hub field-locator)
  (hub field-ref)
  (hub field-set!)
  (class Native extends Field
    (slot symbol getter generate)
    (method override (field-locator self))
    (method override (field-ref self))
    (method override (field-set! self value)))
  (hub get-symbol)
  (class Runtime-Reference extends Object
    (slot resolver getter generate)
    (slot serialization getter generate))
  (hub get-resolver)
  (hub get-serialization)
  (class Define extends Field
    (slot locator getter generate)
    (method override (field-locator self))
    (method override (field-ref self))
    (method override (field-set! self value)))
  (hub get-locator)
  (class Definition extends Field
    (slot locator getter generate)
    (method override (field-locator self))
    (method override (field-ref self))
    (method override (field-set! self value)))
  (class Type extends Object
    (method core virtual (of-type? self object))
    (method core virtual (of-subtype? self subtype))
    (method core virtual (specifiable? self))
    (method core virtual (category-type? self))
    (method core virtual (resolve-type self))
    (method core virtual (emit-specifier self))
    (method core virtual (emit-type self source-declaration environment backend))
    (method core virtual (emit-test self value source-declaration environment backend))
    (method core virtual (emit-cast self value source-declaration environment backend)))
  (class Category extends Type
    (slot identifier getter generate)
    (slot fields getter generate)
    (slot virtual-size getter generate)
    (slot ancestors getter generate)
    (slot descendants getter generate)
    (method core virtual (update-category self))
    (method override (print self output detail))
    (method public (get-name self))
    (method public virtual (mop-category-field self field-name))
    (method public virtual (mop-field-value self property)))
  (hub get-identifier)
  (hub get-fields)
  (hub get-virtual-size)
  (hub get-ancestors)
  (hub get-descendants)
  (hub mop-category-field)
  (hub mop-field-value)
  (definition public (typed? obj category-identifier))
  (class Class extends Category
    (slot ascendant getter generate)
    (slot interfaces getter generate)
    (slot slots getter generate)
    (slot instance-slots getter generate)
    (slot instance-size getter generate)
    (slot level getter generate)
    (slot virtual-names getter generate)
    (slot class-table getter generate)
    (slot interface-table getter generate)
    (slot user-data getter generate)
    (method public virtual (coerce-object self obj))
    (method public virtual (external-name self (error?: error? (unspecified))))
    (method public virtual (marshall-object self object))
    (method public virtual (unmarshall-object self content))
    (method public virtual (mop-instance-slots self object)))
  (hub get-ascendant)
  (hub get-interfaces)
  (hub get-slots)
  (hub get-instance-slots)
  (hub get-instance-size)
  (hub get-level)
  (hub get-virtual-names)
  (hub get-class-table)
  (hub get-interface-table)
  (hub get-user-data)
  (hub coerce-object)
  (hub external-name)
  (hub marshall-object)
  (hub unmarshall-object)
  (hub mop-instance-slots)
  (class Object-Class metaclass Class extends Class)
  (definition public (class? obj))
  (definition public (instance-of? obj class))
  (definition public (coerce object <Object> class <Class>))
  (class Interface extends Category
    (slot ascendants getter generate)
    (slot rank getter generate))
  (hub get-ascendants)
  (hub get-rank)
  (class Method extends Field
    (slot dispatch-type getter generate)
    (slot implementation getter generate)
    (slot implementation-tree getter generate)
    (slot category-rank getter generate)
    (slot implementation-rank getter generate))
  (hub get-dispatch-type)
  (hub get-implementation)
  (hub get-implementation-tree)
  (hub get-category-rank)
  (hub get-implementation-rank)
  (class Method-Node extends Object
    (slot category getter generate)
    (slot implementation getter generate)
    (slot next-node getter generate)
    (slot next-implementation getter generate)
    (slot children getter generate))
  (hub get-category)
  (hub get-next-node)
  (hub get-next-implementation)
  (hub get-children)
  (class Call-Site extends Object
    (slot name accessors generate)
    (slot id accessors generate)
    (slot properties accessors generate)
    (slot procedure accessors generate)
    (slot monitor accessors generate)
    (method override (print self output detail)))
  (hub set-name)
  (hub get-id)
  (hub set-id)
  (hub get-properties)
  (hub set-properties)
  (hub get-procedure)
  (hub set-procedure)
  (hub get-monitor)
  (hub set-monitor)
  (class Queue extends Object
    (slot head getter generate)
    (slot public tail getter generate)
    (slot shared getter generate))
  (hub get-head)
  (hub get-tail)
  (hub get-shared)
  (class Generic extends Object
    (slot locator getter generate)
    (slot name getter generate)
    (slot root-specific getter generate)
    (slot pending-specifics getter generate))
  (hub get-root-specific)
  (hub get-pending-specifics)
  (class Specific extends Object
    (slot dynamic-signature getter generate)
    (slot implementation getter generate)
    (slot ancestor-specifics getter generate)
    (slot descendant-specifics getter generate))
  (hub get-dynamic-signature)
  (hub get-ancestor-specifics)
  (hub get-descendant-specifics)
  (class Bool-Class extends Class)
  (class Bool metaclass Bool-Class extends Object
    (method override (initialize self . rest)))
  (class Boolean-Class extends Class)
  (class Boolean metaclass Boolean-Class extends Object
    (method override (initialize self . rest)))
  (definition public (/= x y))
  (definition public (neq? x y))
  (definition public (xor x y))
  (definition public (nu=? n m . rest))
  (definition public (nu/=? n m . rest))
  (definition public (nu<? n m . rest))
  (definition public (nu<=? n m . rest))
  (definition public (nu>? n m . rest))
  (definition public (nu>=? n m . rest))
  (definition public (ci=? . rest))
  (definition public (ci/=? . rest))
  (definition public (ci<? n . rest))
  (definition public (ci<=? n . rest))
  (definition public (ci>? n . rest))
  (definition public (ci>=? n . rest))
  (definition public (di=? x y))
  (definition public (di<? x y))
  (definition public (di<=? x y))
  (definition public (di>? x y))
  (definition public (di>=? x y))
  (definition public (di-sort-ascending seq (key: key (unspecified))))
  (definition public (di-sort-descending seq (key: key (unspecified))))
  (definition public (boolean->integer bool))
  (definition public (integer->boolean n <int>))
  (definition public false)
  (definition public (false? obj))
  (definition public true)
  (definition public (true? obj))
  (definition public (truth? obj))
  (definition public (boolean->truth bool))
  (definition public (truth->boolean data))
  (definition public Whitespace-Chars)
  (definition public Uppercase-Chars)
  (definition public Lowercase-Chars)
  (definition public Alphabetic-Chars)
  (definition public Numeric-Chars)
  (definition Uppercase-Lowerbound <fx>)
  (definition Uppercase-Upperbound <fx>)
  (definition Lowercase-Lowerbound <fx>)
  (definition Lowercase-Upperbound <fx>)
  (definition Numeric-Lowerbound <fx>)
  (definition Numeric-Upperbound <fx>)
  (definition Diacritic-Equivalences)
  (definition (make-diacritic-table equivalences) <table>)
  (definition Diacritic-Table <table>)
  (definition public (diacritic-equivalent c))
  (definition public (unicode->ascii str))
  (class Char-Class extends Class)
  (class Char metaclass Char-Class extends Object
    (method override (initialize self . rest))
    (method override (coerce-string self))
    (method override (compare-object self c))
    (method override (ci-compare-object self c))
    (method override (di-compare-object self c))
    (method override (object-similar? self object))
    (method override (object-alphabetic? self))
    (method override (object-numeric? self))
    (method override (object-alphanumeric? self))
    (method override (object-whitespace? self))
    (method override (object-upper-case? self))
    (method override (object-lower-case? self))
    (method override (object-upcase self))
    (method override (object-downcase self))
    (method override (object-capitalize self)))
  (definition whitechar?)
  (definition public (char-presentation char))
  (definition public (alphabetic? object <Object>))
  (definition public (numeric? object <Object>))
  (definition public (alphanumeric? object <Object>))
  (definition public (whitespace? object <Object>))
  (definition public (upper-case? object <Object>))
  (definition public (lower-case? object <Object>))
  (definition public (upcase object <Object>))
  (definition public (downcase object <Object>))
  (definition public (capitalize object <Object>))
  (definition public (upcase-capitalized str))
  (definition public (vowel? c))
  (definition public (ascii? c))
  (definition public (control-character? c))
  (definition character-types)
  (definition public (character-type ascii-c <char>) <symbol>)
  (definition public (invalid-character? c <char>) <bool>)
  (definition public (word-constituent? c <char>) <bool>)
  (definition public (scheme-constituent? c <char>) <bool>)
  (definition public (jazz-constituent? c <char>) <bool>)
  (definition public (c-constituent? c <char>) <bool>)
  (definition public (sql-constituent? c <char>) <bool>)
  (class Port-Class extends Class)
  (class Port metaclass Port-Class extends Object
    (method override (initialize self . rest))
    (method override (destroy self)))
  (class Symbol-Class extends Class)
  (class Symbol metaclass Symbol-Class extends Object
    (method override (initialize self . rest))
    (method override (coerce-string self))
    (method override (compare-object self obj))
    (method override (ci-compare-object self obj)))
  (definition public undocumented (=symbolsymbol s1 <symbol> s2 <symbol>) <bool>)
  (definition public (generated-symbol? symbol))
  (definition public (symbol->keyword symbol))
  (definition public (keyword->symbol keyword))
  (definition public (find-symbol str))
  (definition public (symbol-bound? name . rest))
  (definition public (symbol-unbound? name . rest))
  (class Keyword-Class extends Class)
  (class Keyword metaclass Keyword-Class extends Object
    (method override (initialize self . rest)))
  (definition public (find-keyword keyword box default (allow-other-keys? (unspecified))))
  (definition package (box-list lst))
  (definition package (unbox-list box))
  (class Continuation-Class extends Class)
  (class Continuation metaclass Continuation-Class extends Object)
  (class Procedure-Class extends Class)
  (class Procedure metaclass Procedure-Class extends Object)
  (class Foreign-Class extends Class)
  (class Foreign metaclass Foreign-Class extends Object)
  (class Numeric-Class extends Class)
  (class Numeric metaclass Numeric-Class extends Object
    (method public virtual abstract (numeric-norm self))
    (method public virtual abstract (numeric-add self obj))
    (method public virtual abstract (numeric-negate self))
    (method public virtual abstract (numeric-multiply self n))
    (method public virtual abstract (numeric-inverse self)))
  (hub numeric-norm)
  (hub numeric-add)
  (hub numeric-negate)
  (hub numeric-multiply)
  (hub numeric-inverse)
  (class Number-Class extends Numeric-Class)
  (class Number metaclass Number-Class extends Numeric
    (method override (initialize self . rest))
    (method override (compare-object self obj))
    (method override (ci-compare-object self obj))
    (method override (di-compare-object self obj))
    (method override (numeric-norm self))
    (method override (numeric-add self obj))
    (method override (numeric-negate self))
    (method override (numeric-multiply self obj))
    (method override (numeric-inverse self)))
  (class Complex-Class extends Number-Class)
  (class Complex metaclass Complex-Class extends Number
    (method override (numeric-norm self)))
  (class Real-Class extends Complex-Class)
  (class Real metaclass Real-Class extends Complex)
  (class Rational-Class extends Real-Class)
  (class Rational metaclass Rational-Class extends Real)
  (definition public (rational->decimalstring fraction precision))
  (class Integer-Class extends Rational-Class)
  (class Integer metaclass Integer-Class extends Rational)
  (class Fixnum-Class extends Integer-Class)
  (class Fixnum metaclass Fixnum-Class extends Integer)
  (class Ratnum-Class extends Rational-Class)
  (class Ratnum metaclass Ratnum-Class extends Rational)
  (class Flonum-Class extends Real-Class)
  (class Flonum metaclass Flonum-Class extends Real)
  (definition public (fl x) <fl>)
  (definition public (flmodulo x <fl> y <fl>) <fl>)
  (definition public (flsign x <fv>) <fl>)
  (class Flovec-Class extends Flonum-Class)
  (class Flovec metaclass Flovec-Class extends Flonum)
  (class S64-Class extends Integer-Class)
  (class S64 metaclass S64-Class extends Integer)
  (definition public (relate x y) <fx>)
  (definition public (sign n) <fx>)
  (definition public (nu+ . rest))
  (definition public (nu- n <Numeric> . rest))
  (definition public (nu* . rest))
  (definition public (nu/ n <Numeric> . rest))
  (definition public (minimum lst <pair> (key: key (unspecified)) (compare: compare (unspecified))))
  (definition public (maximum lst <pair> (key: key (unspecified)) (compare: compare (unspecified))))
  (definition public (between? n lower upper))
  (definition public (between lower n upper))
  (definition public (in-interval? n lower upper))
  (definition public (between-interval lower n upper))
  (definition public (norm x <Numeric>))
  (definition public (distance start <Numeric> end <Numeric>))
  (definition public (near? x y distance) <bool>)
  (definition public (contiguous-range lst))
  (definition public (naturals lower <int> upper <int>) <list>)
  (definition public (interval lower <int> upper <int>) <list>)
  (definition public (lobyte word <int>) <int>)
  (definition public (hibyte word <int>) <int>)
  (definition public (make-word lo <int> hi <int>) <int>)
  (definition public (lochar word <int>) <int>)
  (definition public (hichar word <int>) <int>)
  (definition public (make-int lo <int> hi <int>) <int>)
  (definition public (loword dword <int>) <int>)
  (definition public (hiword dword <int>) <int>)
  (definition public (signed-loword dword <int>) <int>)
  (definition public (signed-hiword dword <int>) <int>)
  (definition public (sign-word word <int>) <int>)
  (definition public (separate int1 <int> int2 <int>))
  (definition public (randomize))
  (definition public (random n))
  (definition public (bit-set num <int> pos <int> bit <bool>) <int>)
  (definition public (mask-bit-set num <int> msk <int> bit <bool>) <int>)
  (definition public (mask-bit-set? num <int> msk <int>) <bool>)
  (definition public (bit-mask hi <int> lo <int>))
  (definition public (random-seed (seed (unspecified))))
  (definition public (sqr num))
  (definition public (percentage part <real> total <real>) <real>)
  (definition public (percent percent <real> n <real>) <real>)
  (definition public (fxfloor r <fl>) <fx>)
  (definition public (fxceiling r <fl>) <fx>)
  (definition public (fxtruncate r <fl>) <fx>)
  (definition public (fxround r <fl>) <fx>)
  (definition public (fxfloor/ n <fx> d <fx>) <fx>)
  (definition public (fxceiling/ n <fx> d <fx>) <fx>)
  (definition public (fxtruncate/ n <fx> d <fx>) <fx>)
  (definition public (fxround/ n <fx> d <fx>) <fx>)
  (definition public (quotient/ x <fx> y <fx>) <fx>)
  (class Iterator extends Object
    (definition Empty)
    (slot peeked)
    (method override (iterate-object self))
    (method public virtual (get-next self))
    (method public virtual (peek self))
    (method public virtual (unget self object))
    (method public virtual (next self))
    (method public virtual (done? self) <bool>)
    (method public virtual (get-next! self))
    (method public virtual (put self object))
    (method public virtual (get-position self))
    (method public virtual (set-position self pos))
    (method public virtual (get-state self))
    (method public virtual (reset-state self old)))
  (hub get-next)
  (hub peek)
  (hub unget)
  (hub next)
  (hub done?)
  (hub get-next!)
  (hub put)
  (hub get-position)
  (hub set-position)
  (hub get-state)
  (hub reset-state)
  (definition public (iterator obj <Object>) <Iterator>)
  (class Explorer extends Iterator
    (slot direction setter generate)
    (method protected virtual (peek-forward self))
    (method protected virtual (peek-backward self))
    (method override (peek self))
    (method public virtual (goto-beginning self))
    (method public virtual (goto-end self))
    (method public virtual (forward self))
    (method public virtual (backward self))
    (method override (next self))
    (method protected virtual (done-forward? self))
    (method protected virtual (done-backward? self))
    (method override (done? self))
    (method protected virtual (put-forward self object))
    (method protected virtual (put-backward self object))
    (method override (put self object)))
  (hub set-direction)
  (hub peek-forward)
  (hub peek-backward)
  (hub goto-beginning)
  (hub goto-end)
  (hub forward)
  (hub backward)
  (hub done-forward?)
  (hub done-backward?)
  (hub put-forward)
  (hub put-backward)
  (definition public (explore object <Object> . rest) <Explorer>)
  (definition (coerce-sequence seq class))
  (class Sequence-Class extends Class
    (method public virtual abstract (make-sequence self len <int>))
    (method override (coerce-object self seq)))
  (hub make-sequence)
  (class Sequence metaclass Sequence-Class extends Object
    (method override (coerce-string self))
    (method override (compare-object self seq))
    (method override (di-compare-object self seq))
    (method override (copy-object self deep? <bool>))
    (method override (iterate-object self))
    (method override (object-alphabetic? self))
    (method override (object-numeric? self))
    (method override (object-alphanumeric? self))
    (method override (object-whitespace? self))
    (method override (object-upper-case? self))
    (method override (object-lower-case? self))
    (method override (object-upcase self))
    (method override (object-downcase self))
    (method override (object-capitalize self))
    (method package virtual abstract (sequence-element self n <fx>) <any>)
    (method package virtual abstract (sequence-set-element! self n <fx> obj <any>) <void>)
    (method package virtual abstract (sequence-cardinality self) <fx>)
    (method package virtual abstract (sequence-tail self start))
    (method package virtual abstract (sequence-last self))
    (method package virtual abstract (sequence-butlast self))
    (method package virtual (sequence-subseq! self start <fx> end <fx>))
    (method package virtual (sequence-replace-subseq! self start <fx> end <fx> replacement))
    (method public (empty? self))
    (method public (laden? self)))
  (hub sequence-element)
  (hub sequence-set-element!)
  (hub sequence-cardinality)
  (hub sequence-tail)
  (hub sequence-last)
  (hub sequence-butlast)
  (hub sequence-subseq!)
  (hub sequence-replace-subseq!)
  (hub empty?)
  (hub laden?)
  (definition public (sequence? obj))
  (definition public (element seq <Sequence> n <int>) <any>)
  (definition public (set-element! seq <Sequence> n <int> obj <any>) <void>)
  (definition public (cardinality seq <Sequence>) <int>)
  (definition public (tail seq <Sequence> start))
  (definition public (last seq <Sequence>))
  (definition public (butlast seq <Sequence>))
  (definition public (compare-sequence s1 s2 compare))
  (definition public (skip-whitespace seq <Sequence> (start: start (unspecified))))
  (definition public (subseq seq start (end (unspecified)) (type (unspecified))))
  (definition public (replace-subseq! seq <Sequence> start end replacement))
  (definition public (subseq! seq <Sequence> start (end (unspecified))) <Sequence>)
  (definition public (sort test seq (key: key (unspecified))))
  (definition public (sort-vector! test vec))
  (definition public (first seq))
  (definition public (second seq))
  (definition public (third seq))
  (definition public (fourth seq))
  (definition public (fifth seq))
  (definition public (sixth seq))
  (definition public (seventh seq))
  (definition public (eighth seq))
  (definition public (ninth seq))
  (definition public (tenth seq))
  (definition public (set-first! seq value))
  (definition public (set-second! seq value))
  (definition public (set-third! seq value))
  (definition public (set-fourth! seq value))
  (definition public (set-fifth! seq value))
  (definition public (set-sixth! seq value))
  (definition public (set-seventh! seq value))
  (definition public (set-eighth! seq value))
  (definition public (set-ninth! seq value))
  (definition public (set-tenth! seq value))
  (definition public (element-reversed seq n))
  (definition public (iterate seq proc <procedure>))
  (definition public (iterate-sequences proc <procedure> . seqs))
  (definition public (accumulate seq proc <procedure> (type (unspecified))))
  (definition protected (apply-key key <Object> object <Object>))
  (definition protected (apply-test test <Object> x <Object> y <Object>))
  (definition public (gather iterable <Object> (type: type (unspecified))))
  (definition public (collect proc <procedure> seq <Object> (key: key (unspecified)) (type: type (unspecified))))
  (definition public (collect-if predicate <procedure> seq <Object> (key: key (unspecified))))
  (definition public (collect-type type seq <Object> (key: key (unspecified))))
  (definition public (collect-sections lst (separator: separator (unspecified)) (test: test (unspecified))))
  (definition public (count target <Object> seq <Object> (key: key (unspecified)) (test: test (unspecified))))
  (definition public (count-if predicate <procedure> seq (key: key (unspecified))))
  (definition public (count-type type seq <Object> (key: key (unspecified))))
  (definition public (average seq))
  (definition public (find seq target (key: key (unspecified)) (test: test (unspecified)) (start: start (unspecified)) (reversed?: reversed? (unspecified)) (return: return (unspecified))))
  (definition public (find-rank target <Object> seq <Object> (key: key (unspecified)) (test: test (unspecified)) (start: start (unspecified)) (reversed?: reversed? (unspecified))))
  (definition (list-find list target key test start return))
  (definition public (find-in seq target (key: key (unspecified)) (test: test (unspecified)) (start: start (unspecified)) (reversed?: reversed? (unspecified))))
  (definition public (find-balanced open close seq (key: key (unspecified)) (test: test (unspecified)) (start: start (unspecified)) (reversed?: reversed? (unspecified)) (return: return (unspecified))))
  (definition public (find-if predicate <procedure> seq <Object> (key: key (unspecified)) (start: start (unspecified)) (reversed?: reversed? (unspecified)) (return: return (unspecified))))
  (definition public (skip predicate <procedure> seq <Object> (key: key (unspecified)) (start: start (unspecified)) (reversed?: reversed? (unspecified))))
  (definition public (append-map proc <procedure> list1 . lists))
  (definition public (zip list1 . lists))
  (definition public (iota count (start (unspecified)) (step (unspecified))))
  (definition public (fold-left kcons knil lst))
  (definition public (fold-right kcons knil lst))
  (definition public (unfold-right stop? <procedure> seed->elem <procedure> next <procedure> seed (tail (unspecified))))
  (definition public (some? predicate <procedure> (key: key (unspecified)) . seqs))
  (definition public (every? predicate <procedure> (key: key (unspecified)) . seqs))
  (definition public (concatenate . rest))
  (definition public (concatenate! . rest))
  (definition public (subset? set1 set2))
  (definition public (union (key: key (unspecified)) (test: test (unspecified)) . lists))
  (definition public (intersection (key: key (unspecified)) (test: test (unspecified)) . lists))
  (definition public (difference x <Object> y <Object> (key: key (unspecified)) (test: test (unspecified))))
  (definition public (set-xor x <Object> y <Object> (test: test (unspecified))))
  (definition public (remove target <Object> seq <Object> (key: key (unspecified)) (test: test (unspecified))))
  (definition public undocumented onsite (string-remove target <char> str <string>) <string>)
  (definition public (extract-trailer seq <Object> predicate <procedure>))
  (definition public (remove-leading target <Object> seq <Object> (test: test (unspecified))))
  (definition public (remove-trailing target <Object> seq <Object> (test: test (unspecified))))
  (definition public (remove-enclosing target <Object> seq <Object> (test: test (unspecified))))
  (definition public (remove-duplicates seq <Object> (key: key (unspecified)) (test: test (unspecified))))
  (definition public (collect-duplicates seq <Object> (key: key (unspecified)) (test: test (unspecified))))
  (definition public (remove-false seq <Object>))
  (definition public (remove-empty seq <Object>))
  (definition public (trim-spaces seq))
  (definition public (trim-whitespace seq))
  (definition public (trim-leading-whitespace seq))
  (definition public (trim-trailing-whitespace seq))
  (definition public (trim-inner-whitespace str))
  (definition public (mismatch target <Object> seq <Object> (test: test (unspecified))))
  (definition public (prefix sequences <Object> (test: test (unspecified))))
  (definition public (prefix? target <Object> seq <Object>))
  (definition public (copy-into! seq1 seq2))
  (class Search-Context extends Object
    (slot target <Sequence> accessors generate)
    (slot whole-words? <bool> accessors generate)
    (slot ignore-case? <bool> accessors generate)
    (slot ignore-diacritic? <bool> accessors generate)
    (slot regexp? <bool> accessors generate)
    (slot match-test <procedure+> accessors generate)
    (slot constituent-test <procedure+> accessors generate)
    (slot regexp <any> accessors generate)
    (slot user-data <any> accessors generate)
    (method override (print self output detail)))
  (hub get-target)
  (hub set-target)
  (hub get-whole-words?)
  (hub set-whole-words?)
  (hub get-ignore-case?)
  (hub set-ignore-case?)
  (hub get-ignore-diacritic?)
  (hub set-ignore-diacritic?)
  (hub get-regexp?)
  (hub set-regexp?)
  (hub get-match-test)
  (hub set-match-test)
  (hub get-constituent-test)
  (hub set-constituent-test)
  (hub get-regexp)
  (hub set-regexp)
  (hub set-user-data)
  (class Search-Set extends Object
    (slot regexp <any> accessors generate)
    (slot contexts <list> accessors generate))
  (hub get-contexts)
  (hub set-contexts)
  (definition public (->search-context obj))
  (definition public (make-search-context target (whole-words?: whole-words? (unspecified)) (ignore-case?: ignore-case? (unspecified)) (ignore-diacritic?: ignore-diacritic? (unspecified)) (regexp?: regexp? (unspecified)) (match-test: match-test (unspecified)) (constituent-test: constituent-test (unspecified)) (user-data: user-data (unspecified))))
  (definition (allocate-search-context target whole-words? ignore-case? ignore-diacritic? regexp? match-test constituent-test user-data))
  (definition public (->search-set obj) <Search-Set>)
  (definition public (allocate-search-set regexp contexts))
  (definition (->diacritic-ignoring-sre string))
  (definition (search-context->sre context <Search-Context>))
  (definition public (search-context-regexp context <Search-Context>))
  (definition (regular-search-impl seq <Sequence> target <any> match-test <procedure+> constituent-test <procedure+> start <fx+> end <fx+> reversed? <bool>))
  (definition public (regular-search seq <Sequence> target <any> (start: start (unspecified)) (end: end (unspecified)) (reversed?: reversed? (unspecified)) (match-test: match-test (unspecified)) (constituent-test: constituent-test (unspecified))))
  (definition public (regular-search-all seq <Sequence> target <any> (start: start (unspecified)) (end: end (unspecified)) (reversed?: reversed? (unspecified)) (match-test: match-test (unspecified)) (constituent-test: constituent-test (unspecified))))
  (definition public (search seq <Sequence> target <Object> (start: start (unspecified)) (end: end (unspecified)) (reversed?: reversed? (unspecified)) (whole-words?: whole-words? (unspecified)) (ignore-case?: ignore-case? (unspecified)) (ignore-diacritic?: ignore-diacritic? (unspecified)) (regexp?: regexp? (unspecified)) (match-test: match-test (unspecified)) (constituent-test: constituent-test (unspecified))) <int+>)
  (definition public (search-all seq <Sequence> target <Object> (start: start (unspecified)) (end: end (unspecified)) (reversed?: reversed? (unspecified)) (whole-words?: whole-words? (unspecified)) (ignore-case?: ignore-case? (unspecified)) (ignore-diacritic?: ignore-diacritic? (unspecified)) (regexp?: regexp? (unspecified)) (match-test: match-test (unspecified)) (constituent-test: constituent-test (unspecified))) <list>)
  (definition public (split seq <Object> separator <Object>) <list>)
  (definition public (split-justified seq <Object> width separators <Object> (column: column (unspecified))))
  (definition public (join sequences <Object> separator <Object>))
  (definition public (join-symbols symbols separator))
  (definition public (inject sequence inserted))
  (definition public (substitute old-value <Object> new-value <Object> seq <Object> (key: key (unspecified)) (test: test (unspecified)) (sequence?: sequence? (unspecified))))
  (definition public (substitute-alist replacements <Object> seq <Object> (key: key (unspecified)) (test: test (unspecified))))
  (definition public (substitute-string str old new))
  (definition public (fill! seq object (start: start (unspecified))))
  (definition public (replace! seq replacement (start: start (unspecified))))
  (definition public (ordered-position object seq (key: key (unspecified)) (test: test (unspecified))))
  (definition public (insert-ordered! object seq (key: key (unspecified)) (test: test (unspecified))))
  (definition global-compare)
  (definition global-ci-compare)
  (definition public (merge-ordered proc x y (key: key (unspecified)) (left-key: left-key (unspecified)) (right-key: right-key (unspecified)) (compare: compare (unspecified)) (case-insensitive?: case-insensitive? (unspecified))))
  (definition public (merge proc lists (key: key (unspecified)) (compare: compare (unspecified))))
  (definition public (next-element seq elem (key: key (unspecified)) (test: test (unspecified)) (cycle?: cycle? (unspecified))))
  (definition public (previous-element seq elem (key: key (unspecified)) (test: test (unspecified)) (cycle?: cycle? (unspecified))))
  (definition public (cycle-element seq elem (key: key (unspecified)) (test: test (unspecified)) (cycle?: cycle? (unspecified)) (reversed?: reversed? (unspecified))))
  (definition public (random-element seq))
  (definition public (random-sequence seq))
  (definition public (partition sequence (key: key (unspecified)) (test: test (unspecified))))
  (definition public (partition-binary lst predicate))
  (definition public (starts-with? seq target (test: test (unspecified)) (ignore-case?: ignore-case? (unspecified))) <bool>)
  (definition public (ends-with? seq target (test: test (unspecified)) (ignore-case?: ignore-case? (unspecified))) <bool>)
  (definition public (for-each-reversed proc lst))
  (definition (find-if-list predicate list key start returned))
  (definition public (insert-sequence! sequence pos seq))
  (class Sequence-Explorer extends Explorer
    (slot sequence <Sequence>)
    (slot public sequence-cardinality <fx>)
    (slot current <fx>)
    (method override (initialize self seq (direction: direction (unspecified)) (start: start (unspecified))))
    (method override (peek-forward self))
    (method override (peek-backward self))
    (method override (goto-beginning self))
    (method override (goto-end self))
    (method override (forward self))
    (method override (backward self))
    (method override (done-forward? self))
    (method override (done-backward? self))
    (method override (put-forward self object <Object>))
    (method override (put-backward self object <Object>))
    (method override (get-position self))
    (method override (set-position self pos <fx>))
    (method override (get-state self))
    (method override (reset-state self state <fx>)))
  (class List-Class extends Sequence-Class
    (method override (make-sequence self len))
    (method override (coerce-object self seq)))
  (class List metaclass List-Class extends Sequence
    (method override (initialize self . rest))
    (method override (copy-object self deep?))
    (method override (iterate-object self))
    (method override (sequence-element self n) <any>)
    (method override (sequence-set-element! self n <fx> obj <any>) <void>)
    (method override (sequence-cardinality self) <fx>)
    (method override (sequence-tail self n))
    (method override (sequence-last self))
    (method override (sequence-butlast self))
    (method override (sequence-subseq! self start end))
    (method (replace-subseq! self start end seq)))
  (class Null-Class extends List-Class)
  (class Null metaclass Null-Class extends List
    (method override (compare-object self obj))
    (method override (di-compare-object self obj)))
  (class Pair-Class extends List-Class)
  (class Pair metaclass Pair-Class extends List
    (method override (compare-object self obj))
    (method override (di-compare-object self obj))
    (method override (walk-references self proc))
    (method override (setup-context self context)))
  (definition public undocumented (elementlist list <list> n) <any>)
  (definition public undocumented (cardinalitylist list <list>) <int>)
  (definition public (insert! seq pos obj))
  (definition public (atom? value))
  (definition public (null/pair? obj))
  (definition public (one-element? obj))
  (definition public (last-tail lst))
  (definition public (make-list n . rest))
  (definition public (list-set! list n value))
  (definition public (set-cadr! pair value))
  (definition public (append! . rest))
  (definition public (position target lst (key: key (unspecified)) (test: test (unspecified))))
  (definition public (copy-tree tree))
  (definition public (position-of obj lst))
  (definition public (proper-list? lst))
  (definition public (proper-length l))
  (definition public (split-list lst))
  (definition public (last-cdr lst))
  (definition public (butlast-cdr lst))
  (definition public (add-ordered! obj lst (key: key (unspecified))))
  (definition public (move-to-head! target lst))
  (definition public (move-to-tail! target lst))
  (definition public (augment . rest))
  (definition public (memq? target <Object> list <Object>))
  (definition public (memv? target <Object> list <Object>))
  (definition public (member? target <Object> list <Object> (key: key (unspecified)) (test: test (unspecified))))
  (definition public (assq-value key list default-value))
  (definition public (assv-value key list default-value))
  (definition public (assoc-value key list default-value))
  (definition public (associate target <Object> list <Object> (key: key (unspecified)) (test: test (unspecified))))
  (definition public (rassociate target <Object> list <Object> (key: key (unspecified)) (test: test (unspecified))))
  (definition public (find-pair target <Object> list <Object> (key: key (unspecified)) (test: test (unspecified))))
  (definition public (reverse! list <Object>))
  (definition public (remove! target <Object> list <Object> (key: key (unspecified)) (test: test (unspecified))))
  (definition public (subtract! target <Object> list <Object>))
  (definition public (getprop plist <Object> target <Object> (key: key (unspecified)) (test: test (unspecified))))
  (definition public (plist-remove plist keyword))
  (definition public (plist-add plist keyword value))
  (definition public (getf plist <Object> target <Object> (key: key (unspecified)) (test: test (unspecified)) (not-found: not-found (unspecified))))
  (definition public (setf plist <Object> target <Object> value <Object>))
  (definition public (addf plist <Object> target <Object> value <Object>))
  (definition public (for-each-pair proc lst))
  (definition public (for-each-property proc lst))
  (definition public (map-property proc lst))
  (definition public (flatten-lists llist))
  (definition public (uniform lst (key: key (unspecified)) (test: test (unspecified))))
  (definition public (sort-property-list prop-list <Object>))
  (definition public (plist->alist ls))
  (definition public (alist->plist ls))
  (class List-Iterator extends Iterator
    (slot current)
    (slot public position)
    (method override (initialize self list <list>))
    (method override (get-next! self))
    (method override (done? self))
    (method override (put self object))
    (method override (get-position self))
    (method override (set-position self pos))
    (method override (get-state self))
    (method override (reset-state self state))
    (method public (get-list self)))
  (hub get-list)
  (class List-Factory extends Object
    (slot list getter generate)
    (slot last-list)
    (slot last-anchor)
    (slot current)
    (slot public size <fx> getter generate)
    (method package (put self object <Object>))
    (method (put-unique self object (test: test (unspecified))))
    (method package (put-sequence self seq <Object>))
    (method public (is-empty? self))
    (method public (get-last-element self))
    (method package (get-output self))
    (method public (reset self))
    (method private (copy-last-list self)))
  (hub get-size)
  (hub put-sequence)
  (hub is-empty?)
  (hub get-last-element)
  (hub get-output)
  (hub reset)
  (class Table extends Object
    (method override (initialize self . rest))
    (method override (print self output readably)))
  (definition public (table-add table <table> key value))
  (definition public (table-remove! table <table> key value))
  (definition public (table-subtract! table <table> key value))
  (definition public (empty-table table <table>))
  (definition public (table-keys table <table>))
  (definition public (table-values table <table>))
  (definition public (table-keys/values table <table>))
  (definition public (table-find table <table> value (test: test (unspecified))))
  (definition public (table-load table <table> input (error-on-duplicates? (unspecified))))
  (definition public (table-save table <table> output))
  (definition public (serialize-reference reference))
  (definition *serialized-classes* <table>)
  (definition public (serialize-class class))
  (definition public (serialize-object class content))
  (definition *deserialized-classes* <table>)
  (definition public (deserialize-class reference))
  (definition public (serialize obj))
  (definition public (deserialize obj))
  (definition public (serialize-literal obj))
  (definition public (deserialize-literal content))
  (definition *services*)
  (definition public (provide-service name proc))
  (definition public (request-service name (not-provided (unspecified))))
  (class Slot extends Field
    (slot offset getter generate)
    (slot initialize getter generate))
  (hub get-offset)
  (hub get-initialize)
  (class Property extends Slot
    (slot getter getter generate)
    (slot setter getter generate))
  (hub get-getter)
  (hub get-setter)
  (definition public (property? obj))
  (definition public (symbolize-property property <Object>))
  (definition public (symbolize-properties properties <Object>))
  (definition public (keywordize-property property <Object>))
  (definition public (keywordize-properties properties <Object>))
  (definition public (read-property object <Object> expr <Object>))
  (definition public (write-property object <Object> expr <Object> value <Object>))
  (definition public (property-field class <Class> expr <Object>))
  (definition public (property-field? class <Class> symbol <symbol>))
  (class String-Class extends Sequence-Class
    (method override (make-sequence self len))
    (method override (coerce-object self obj <Object>)))
  (class String metaclass String-Class extends Sequence
    (method override (initialize self . rest))
    (method override (coerce-string self))
    (method override (compare-object self obj))
    (method override (ci-compare-object self obj))
    (method override (sequence-element self n <fx>) <any>)
    (method override (sequence-set-element! self n <fx> obj <any>) <void>)
    (method override (sequence-cardinality self) <fx>)
    (method override (sequence-tail self n))
    (method override (sequence-last self))
    (method override (sequence-butlast self)))
  (definition public undocumented (=stringstring s1 <string> s2 <string>) <bool>)
  (definition public undocumented (elementstring string <string> n) <char>)
  (definition public undocumented (set-element!string string <string> n c) <void>)
  (definition public undocumented (cardinalitystring string <string>) <fx>)
  (definition public undocumented (subseqstring string <string> start end) <string>)
  (definition public undocumented onsite (replace-subseq!string string <string> start end replacement) <string>)
  (definition public undocumented onsite (string-for-each proc seq <string>))
  (definition public undocumented onsite (butlaststring seq <string>) <string>)
  (definition public undocumented onsite (string-find seq <string> target (key: key (unspecified)) (test: test (unspecified)) (start: start (unspecified)) (end: end (unspecified)) (reversed?: reversed? (unspecified))) <int+>)
  (definition public undocumented onsite (string-find-in seq <string> target (key: key (unspecified)) (test: test (unspecified)) (start: start (unspecified)) (end: end (unspecified)) (reversed?: reversed? (unspecified))))
  (definition public undocumented onsite (starts-with?stringstring seq <string> target <string>) <bool>)
  (definition public undocumented onsite (ends-with?stringstring seq <string> target <string>) <bool>)
  (definition public (empty-string? object))
  (definition public (->string expr (detail (unspecified))))
  (definition public (string-search str target (start: start (unspecified))))
  (definition public (string-contains? str target (start: start (unspecified))))
  (definition public (string-trailer str <string> c) <string>)
  (definition public (remove-trailing-char string c))
  (definition public (value-string? object <Object>))
  (definition public (wi=? s1 <Object> s2 <Object>))
  (definition public (unique-domain-name name domain (separator: separator (unspecified))))
  (definition public (remove-numeric-suffix string))
  (definition public (compare-n x <string> y <string> max <fx> (test: test (unspecified))))
  (definition public (string-checksum str))
  (definition public (split-lines string))
  (definition public (join-lines lines))
  (definition public (append-lines . args))
  (definition public (seconds->milliseconds x))
  (definition public (milliseconds->seconds x))
  (definition public (seconds->microseconds x))
  (definition public (microseconds->seconds x))
  (class Waiter extends Object
    (slot name getter generate)
    (slot time getter generate)
    (slot proc getter generate)
    (slot mutex <object> getter generate)
    (slot condvar <object> getter generate)
    (slot public done? getter generate)
    (method override (initialize self name))
    (method public (done self))
    (method public (in self delay proc))
    (method (wait self)))
  (hub get-time)
  (hub get-proc)
  (hub get-mutex)
  (hub get-condvar)
  (hub get-done?)
  (hub done)
  (hub in)
  (definition public (make-waiter (name (unspecified))))
  (class Box extends Object
    (slot boxed getter generate)
    (method override (initialize self (boxed (unspecified))))
    (method override (print self output readably)))
  (hub get-boxed)
  (class ReadWrite-Gate extends Object
    (slot reader-count)
    (slot reader-mutex)
    (slot work-mutex)
    (method public (reader-lock! self))
    (method public (reader-unlock! self))
    (method public (writer-lock! self))
    (method public (writer-unlock! self)))
  (hub reader-lock!)
  (hub reader-unlock!)
  (hub writer-lock!)
  (hub writer-unlock!)
  (definition public (make-readwrite-gate))
  (class Priority-Queue extends Object
    (slot priority-count <fx>)
    (slot queue-vector <vector>)
    (slot mutex)
    (slot mutex-condition-variable)
    (method override (initialize self count))
    (method public (empty? self))
    (method public (size self))
    (method (top-queue self))
    (method public (push self obj (priority (unspecified))))
    (method public (pop self timeout)))
  (hub size)
  (hub push)
  (hub pop)
  (definition primordial-thread-object)
  (definition public (primordial-thread))
  (definition public (primordial-thread?))
  (definition public (new-thread thunk name . rest))
  (definition public (thread-group-all-threads thread-group))
  (definition public (top-threads))
  (definition public (present-thread-name name))
  (definition public (present-thread-state state))
  (definition public (safe-present-object object (max-width (unspecified))))
  (definition public (safe-present-property object slot))
  (definition delayed-events)
  (definition package (write-delayed-event thunk))
  (definition package (read-delayed-event))
  (definition public (process-delayed-events))
  (definition package (thread-loop? thread))
  (definition package (thread-start-loop thread))
  (definition package (thread-stop-loop thread))
  (definition package (thread-loop))
  (definition public (start-loop-thread name . rest))
  (definition thread-queues <table>)
  (definition thread-queues-mutex)
  (definition package (thread-has-port? thread))
  (definition (get-thread-queue thread) <Priority-Queue>)
  (definition package (thread-write-message thread thunk priority))
  (definition package (thread-read-message (timeout: timeout (unspecified))))
  (definition package (thread-write thread thunk (priority (unspecified))))
  (definition package (thread-read (timeout: timeout (unspecified))))
  (definition public (thread-process (timeout: timeout (unspecified))))
  (definition public (thread-post thread name thunk (priority (unspecified))))
  (definition public (thread-block thread name thunk (priority (unspecified))))
  (definition public (thread-execute thread name thunk (priority (unspecified))))
  (definition thread-call-noresult)
  (definition package (thread-call-result? result))
  (definition public (thread-call thread name thunk (priority (unspecified))))
  (definition public (thread-exit))
  (definition public (exit-thread thread))
  (definition public (sleep delay))
  (definition public (is-not? object type))
  (definition public category-identifier)
  (definition public category-descendants)
  (definition public class-ascendant)
  (definition public (category-name category))
  (definition public (category-unit category))
  (definition public (either . rest))
  (class Vector-Class extends Sequence-Class
    (method override (make-sequence self len)))
  (class Vector metaclass Vector-Class extends Sequence
    (method override (initialize self . rest))
    (method override (sequence-element self n))
    (method override (sequence-set-element! self n obj))
    (method override (sequence-cardinality self))
    (method override (sequence-tail self n))
    (method override (sequence-last self))
    (method override (sequence-butlast self)))
  (definition public undocumented (elementvector vector <vector> n) <object>)
  (definition public undocumented (set-element!vector vector <vector> n obj) <void>)
  (definition public undocumented (cardinalityvector vector <vector>) <fx>)
  (definition public (vector-map proc vector <vector> . vectors))
  (definition public (vector-for-each proc vector <vector> . vectors))
  (definition public (allocate-vector size) <vector>)
  (definition public (subvector-shift! vector <vector> start <fx> end <fx> shift <fx>))
  (definition public (subf64vector-shift! vector <f64vector> start <fx> end <fx> shift <fx>))
  (definition public (allocate-s8vector size) <s8vector>)
  (definition public (allocate-u8vector size) <u8vector>)
  (definition public (allocate-s16vector size) <s16vector>)
  (definition public (allocate-u16vector size) <u16vector>)
  (definition public (allocate-s32vector size) <s32vector>)
  (definition public (allocate-u32vector size) <u32vector>)
  (definition public (allocate-s64vector size) <s64vector>)
  (definition public (allocate-u64vector size) <u64vector>)
  (definition public (allocate-f32vector size) <f32vector>)
  (definition public (allocate-f64vector size) <f64vector>)
  (definition AXIS_MIN_SIZE <fx>)
  (definition AXIS_GOLDEN_RATIO <fl>)
  (class Axis-Class extends Sequence-Class
    (method override (make-sequence self len)))
  (class Axis metaclass Axis-Class extends Sequence
    (slot public size <fx> accessors generate)
    (slot content <vector> accessors generate)
    (method override (initialize self (s (unspecified))))
    (method override (print self output detail))
    (method override (sequence-element self n <fx>) <any>)
    (method override (sequence-set-element! self n <fx> obj <any>) <void>)
    (method override (sequence-cardinality self) <fx>)
    (method override (sequence-tail self n <fx>) <Axis>)
    (method override (sequence-last self) <any>))
  (hub set-size)
  (hub get-content)
  (hub set-content)
  (definition public (axis . rest))
  (definition public undocumented (elementAxis axis <Axis> n) <any>)
  (definition public undocumented (set-element!Axis axis <Axis> n obj) <void>)
  (definition public undocumented (cardinalityAxis axis <Axis>) <fx>)
  (definition public undocumented onsite (tailAxis axis <Axis> n) <Axis>)
  (definition public undocumented onsite (lastAxis axis <Axis>) <any>)
  (definition public undocumented onsite (insert!Axis axis <Axis> pos obj) <Axis>)
  (definition public undocumented onsite (replace-subseq!Axis axis <Axis> start end replacement) <Axis>)
  (definition public (axis-remove! axis <Axis> element <any>) <void>)
  (definition public (axis-adjust axis <Axis> n <fx>))
  (definition public (axis-add axis <Axis> obj))
  (definition public (allocate-axis size <fx>) <Axis>)
  (definition public undocumented (newcategory<Axis> class <category<Axis>> size) <Axis>)
  (definition public undocumented (axis-ref axis <Axis> n) <object>)
  (definition public undocumented (axis-set! axis <Axis> n obj) <void>)
  (definition public undocumented (axis-cardinality axis <Axis>) <fx>)
  (definition public undocumented onsite (axis-for-each proc seq <Axis>))
  (definition public undocumented onsite (axis-find seq <Axis> target (key: key (unspecified)) (test: test (unspecified)) (start: start (unspecified)) (end: end (unspecified)) (reversed?: reversed? (unspecified))) <int+>)
  (definition public undocumented onsite (axis-find-in seq <Axis> target (key: key (unspecified)) (test: test (unspecified)) (start: start (unspecified)) (end: end (unspecified)) (reversed?: reversed? (unspecified))))
  (definition public (dispatch? expr))
  (definition public (dispatch-string? str))
  (definition public (dispatch->name dispatch))
  (class Enumeration extends Class
    (slot members accessors generate)
    (method package (add-member self member))
    (method override (print self output readably))
    (method (name->member self name))
    (method (value->member self value))
    (method public (name->value self name))
    (method public (value->name self value))
    (method public (bits->names self bits)))
  (hub get-members)
  (hub set-members)
  (hub add-member)
  (hub name->value)
  (hub value->name)
  (hub bits->names)
  (class Enumeration-Member metaclass Enumeration extends Object
    (slot name getter generate)
    (method override (initialize self name))
    (method override (print self output readably))
    (method package virtual (get-value self)))
  (hub get-value)
  (definition public (enumeration? obj))
  (definition public (parse-attributes list))
  (hub find-component)
  (definition *nicknames*)
  (definition public (registered-nicknames))
  (definition public (register-nickname name object))
  (definition public (resolve-nickname name))
  (definition public (reference-string? str))
  (definition public (reference->name str))
  (definition public (32-bit-integer->bytes x proc))
  (definition public (64-bit-integer->bytes x proc))
  (definition public (bytes->32-bit-integer b1 b2 b3 b4))
  (definition public (bytes->64-bit-integer b1 b2 b3 b4 b5 b6 b7 b8))
  (definition public (code-string->32-bit-integer s))
  (definition public (32-bit-integer->code-string x))
  (definition public undocumented (make-u8-content size content))
  (definition public undocumented (u8-content-size content))
  (definition public undocumented (iterate-u8-content content proc))
  (definition public undocumented (read-u8-content port))
  (definition public undocumented (write-u8-content content port))
  (definition public undocumented (start-pump port proc))
  (definition public (write-32-bit-integer n port))
  (definition public (read-32-bit-integer port))
  (definition public (write-binary-content u8vect port))
  (definition public (read-binary-content port))
  (definition public (write-binary-object data port (encoder (unspecified))))
  (definition public (read-binary-object port (decoder (unspecified))))
  (definition public (write-binary data port))
  (definition public (read-binary port))
  (definition public (read-until test input))
  (definition public (read-string-element string))
  (definition public (read-string-content string))
  (definition public (readable-string? string))
  (definition public (read-string-safe string))
  (definition public (read-delimited-string string char))
  (definition public (require-char input))
  (definition public (skip-line input))
  (definition public (skip-whites input))
  (definition public (read-delimited input kind delimiter (allow-eof? (unspecified))))
  (definition public (string-delimiter? c))
  (definition public (read-platform-line input))
  (definition public (read-lines input))
  (definition public (read-lines-chunked input chunk-size proc))
  (definition public (read-content-string input))
  (definition public (pipe input output))
  (definition public (textual expr (output (unspecified))))
  (definition public (describe expr (output (unspecified))))
  (definition public (fresh-line (output (unspecified))))
  (definition public (at-fresh-line? (output (unspecified))))
  (definition *printers* <table>)
  (definition package (register-printer name proc))
  (definition public (with-printer printer proc))
  (definition public (present-reference reference))
  (definition public (write-line line . rest))
  (definition public (write-lines output lines))
  (definition public (do-nothing . rest))
  (definition public (identity x))
  (definition public (const x))
  (definition public (compose f g))
  (definition public (compose* . fns))
  (class Subseq-Class extends Sequence-Class)
  (class Subseq metaclass Subseq-Class extends Sequence
    (slot sequence getter generate)
    (slot start <fx> accessors generate)
    (slot public size <fx> accessors generate)
    (method override (initialize self sequence start <fx> size <fx>))
    (method override (print self output detail))
    (method override (coerce-string self))
    (method override (sequence-element self n <fx>) <any>)
    (method override (sequence-set-element! self n <fx> obj <any>) <void>)
    (method override (sequence-cardinality self) <int>)
    (method override (sequence-subseq! self s <fx> e <fx>) <Subseq>))
  (hub get-sequence)
  (hub get-start)
  (hub set-start)
  (definition public (allocate-subseq sequence <string> start <fx> size <fx>) <Subseq>)
  (definition public undocumented (newcategory<Subseq> class <category<Subseq>> sequence start size) <Subseq>)
  (definition public (offset-subseq! subseq <Subseq> offset <fx>) <void>)
  (definition public (grow-subseq! subseq <Subseq> n <fx>) <void>)
  (definition public undocumented (subseq-ref subseq <Subseq> n) <object>)
  (definition public undocumented (subseq-set! subseq <Subseq> n obj) <void>)
  (definition public undocumented (subseq-cardinality subseq <Subseq>) <int>)
  (class Subseq$string$-Class extends Sequence-Class)
  (class Subseq$string$ metaclass Subseq$string$-Class extends Sequence
    (slot sequence <string> getter generate)
    (slot start <fx> accessors generate)
    (slot public size <fx> accessors generate)
    (method override (initialize self sequence <string> start <fx> size <fx>))
    (method override (print self output detail))
    (method public (print-content self output))
    (method override (sequence-element self n <fx>) <any>)
    (method override (sequence-set-element! self n <fx> obj <any>) <void>)
    (method override (sequence-cardinality self) <int>)
    (method override (sequence-subseq! self s <fx> e <fx>) <Subseq$string$>))
  (hub print-content)
  (definition public (allocate-subseq$string$ sequence <string> start <fx> size <fx>) <Subseq$string$>)
  (definition public undocumented (newcategory<Subseq$string$> class <category<Subseq$string$>> sequence start size) <Subseq$string$>)
  (definition public undocumented (elementSubseq$string$ subseq <Subseq$string$> n) <char>)
  (definition public undocumented (set-element!Subseq$string$ subseq <Subseq$string$> n obj) <void>)
  (definition public undocumented (cardinalitySubseq$string$ subseq <Subseq$string$>) <fx>)
  (definition public undocumented onsite (subseq!string seq <string> s e) <Subseq$string$>)
  (definition public undocumented onsite (subseq!Subseq$string$ subseq <Subseq$string$> s e) <Subseq$string$>)
  (definition public undocumented onsite (offset-subseq!Subseq$string$ subseq <Subseq$string$> offset) <void>)
  (definition public undocumented onsite (grow-subseq!Subseq$string$ subseq <Subseq$string$> n) <void>)
  (definition public (values->list values))
  (definition protected capabilities)
  (definition public (get-capability capability (default-value (unspecified))))
  (definition public (set-capability capability value))
  (definition protected siteids <vector>)
  (definition public (id->site id <fx>) <Call-Site>)
  (definition next-site-id <fx>)
  (definition (next-site-id!) <fx>)
  (definition protected (site-id-count) <fx>)
  (definition call-sites <table>)
  (definition public (registered-sites))
  (definition public (registered-site name) <Call-Site>)
  (definition public (find-site name) <Call-Site+>)
  (definition public (register-site name properties))
  (definition site-callback)
  (definition public (get-site-callback))
  (definition public (set-site-callback callback))
  (definition public (call-site-ref name))
  (definition public (call-site-set! name value)))
