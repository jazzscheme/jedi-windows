(module jazz.language.runtime.exception jazz.dialect
  (import (jazz.language.runtime.kernel))
  (import (jazz.language.runtime.format))
  (import (jazz.language.runtime.functional))
  (import (jazz.language.runtime.geometry))
  (import (jazz.language.runtime.object))
  (definition *exception-debugger*)
  (definition public (get-exception-debugger))
  (definition public (set-exception-debugger exception-debugger))
  (definition public current-exception-debugger)
  (definition package (exception-debugger-hook exc other))
  (definition public (with-exception-debugger exception-debugger thunk))
  (definition public (active-exception-debugger))
  (definition public (system-exception-debugger exc))
  (definition public (with-system-exception-debugger thunk))
  (class Exception extends Object
    (method core virtual (present-exception self))
    (method core virtual (exception-message self))
    (method core virtual (get-detail self))
    (method public virtual (get-message self))
    (method public virtual (present-message self . rest))
    (method override (print self output readably)))
  (hub get-message)
  (hub present-message)
  (definition public (exception? obj))
  (class Exception-Detail-Class extends Class
    (method override (marshall-object self object))
    (method override (unmarshall-object self content)))
  (class Exception-Detail metaclass Exception-Detail-Class extends Object
    (slot icon getter generate)
    (slot title getter generate)
    (slot location getter generate)
    (slot children getter generate)
    (method override (initialize self icon title location children))
    (method override (print self output readably)))
  (hub get-icon)
  (hub get-title)
  (hub get-location)
  (hub get-children)
  (class System-Exception extends Exception
    (slot exception getter generate)
    (method override (initialize self exception)))
  (hub get-exception)
  (definition public (wrap-exception obj))
  (class Break extends Exception
    (slot continue)
    (method override (initialize self continue)))
  (class Continue extends Exception)
  (class Error extends Exception
    (slot message accessors generate)
    (method override (initialize self (message: message (unspecified)))))
  (hub set-message)
  (definition public (error? obj))
  (class Read-Error extends Error
    (slot source getter generate)
    (slot start getter generate)
    (slot end getter generate)
    (method override (initialize self . rest))
    (method public (get-range self)))
  (hub get-source)
  (hub get-start)
  (hub get-end)
  (hub get-range)
  (class Parse-Error extends Error
    (slot source getter generate)
    (slot start getter generate)
    (slot end getter generate)
    (method override (initialize self . rest)))
  (class Conversion-Error extends Parse-Error
    (slot object getter generate)
    (slot type getter generate)
    (method override (initialize self . rest))
    (method override (get-message self)))
  (hub get-object)
  (hub get-type)
  (class Source-Error extends Error
    (slot source getter generate)
    (slot start getter generate)
    (slot end getter generate)
    (method override (initialize self source . rest))
    (method public (get-range self)))
  (class Signal extends Exception)
  (class Cancel-Signal extends Signal)
  (definition public (call-with-catch predicate/type catcher thunk))
  (definition exception-contexts)
  (definition public (get-exception-context exception))
  (definition public (set-exception-context exception continuation))
  (definition public (capture-exception-context exception))
  (definition public (throw exception))
  (definition public (error . rest))
  (definition public (disabled-functionality))
  (definition public (must-implement definition-name (what (unspecified))))
  (definition public (warn string . rest))
  (definition public (warn-unimplemented name))
  (definition public (signal signal))
  (definition public (signal-cancel))
  (class Restart extends Object
    (slot name getter generate)
    (slot message getter generate)
    (slot handler getter generate)
    (method override (initialize self name message handler))
    (method override (print self output readably)))
  (hub get-name)
  (hub get-handler)
  (definition public current-restarts)
  (definition public (with-restart-handler name message handler thunk))
  (definition public (with-restart-catcher name message thunk))
  (definition public (find-restart name))
  (definition public (find-restarts name))
  (definition public (invoke-restart restart . rest))
  (definition public (new-system-thread thunk name . rest)))
