(module jazz.language.runtime.object jazz.dialect
  (import (jazz.language.runtime.hubs))
  (import (jazz.language.runtime.kernel))
  (native private jazz:error)
  (class Object
    (method core chained (initialize self))
    (method core chained (destroy self))
    (method core public virtual (call-print self output detail))
    (method core virtual (print-object self output detail))
    (method core virtual (tree-fold self down up here seed environment))
    (method public virtual (print self output detail))
    (method protected (print-detail self output detail))
    (method package virtual (assemble self))
    (method public virtual (class-actions self))
    (method public virtual (focus-actions self))
    (method public virtual (guest-actions self))
    (method public virtual (hash-object self))
    (method package virtual (copy-object self deep?))
    (method package virtual (compare-object self object))
    (method package virtual (ci-compare-object self object))
    (method package virtual (di-compare-object self object))
    (method protected virtual (describe-object self output))
    (method public virtual (initialized? self))
    (method public virtual (close self))
    (method public virtual (destroying? self))
    (method public virtual (destroyed? self))
    (method public virtual (walk-references self proc))
    (method public virtual (setup-context self context))
    (method public virtual (get-sort-value self))
    (method package virtual (coerce-string self))
    (method package virtual (iterate-object self))
    (method protected virtual (marshall-size self))
    (method protected virtual (marshall-to self obj content))
    (method protected virtual (unmarshall-from self obj content))
    (method protected virtual (object-similar? self object))
    (method package virtual (object-alphabetic? self))
    (method package virtual (object-numeric? self))
    (method package virtual (object-alphanumeric? self))
    (method package virtual (object-whitespace? self))
    (method package virtual (object-upper-case? self))
    (method package virtual (object-lower-case? self))
    (method package virtual (object-upcase self))
    (method package virtual (object-downcase self))
    (method package virtual (object-capitalize self)))
  (hub print)
  (hub print-detail)
  (hub assemble)
  (hub class-actions)
  (hub focus-actions)
  (hub guest-actions)
  (hub hash-object)
  (hub copy-object)
  (hub compare-object)
  (hub ci-compare-object)
  (hub di-compare-object)
  (hub describe-object)
  (hub initialized?)
  (hub close)
  (hub destroying?)
  (hub destroyed?)
  (hub walk-references)
  (hub setup-context)
  (hub get-sort-value)
  (hub coerce-string)
  (hub iterate-object)
  (hub marshall-size)
  (hub marshall-to)
  (hub unmarshall-from)
  (hub object-similar?)
  (hub object-alphabetic?)
  (hub object-numeric?)
  (hub object-alphanumeric?)
  (hub object-whitespace?)
  (hub object-upper-case?)
  (hub object-lower-case?)
  (hub object-upcase)
  (hub object-downcase)
  (hub object-capitalize)
  (definition public (compare a <Object> b <Object>))
  (definition public (ci-compare a <Object> b <Object>))
  (definition public (di-compare a <Object> b <Object>))
  (definition public (copy obj <Object>))
  (definition public (subcopy obj <Object> deep? <bool>))
  (definition public (print-unreadable object <Object> output proc))
  (definition package (native-class name))
  (definition public (hash obj <Object>))
  (definition public track-leaks?)
  (definition protected leak-stack?)
  (definition protected leak-backtrace?)
  (definition protected leak-depth)
  (definition public *allocated* <table>)
  (definition public *double-freed* <table>)
  (definition public (leak-info))
  (definition public (allocated obj))
  (definition public (freed obj))
  (definition *leaks-mutex*)
  (definition *leaks*)
  (definition public (leaks))
  (definition (leaked obj info)))
