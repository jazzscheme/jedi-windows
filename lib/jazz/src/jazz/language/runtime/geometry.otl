(module jazz.language.runtime.geometry jazz.dialect
  (import (jazz.language.runtime.kernel))
  (import (jazz.language.runtime.format))
  (import (jazz.language.runtime.functional))
  (import (jazz.language.runtime.object))
  (native private jazz:error)
  (class Cell extends Numeric
    (method meta override (marshall-object self object))
    (method meta override (unmarshall-object self content))
    (slot line <fx> accessors generate)
    (slot col <fx> accessors generate)
    (method override (initialize self l <fx> c <fx>))
    (method override (copy-object self deep?))
    (method override (compare-object self target))
    (method override (di-compare-object self target))
    (method override (print self output readably))
    (method override (numeric-norm self))
    (method override (numeric-add self n))
    (method override (numeric-negate self))
    (method override (numeric-multiply self n))
    (method override (numeric-inverse self))
    (method public (increase-line self (delta (unspecified))))
    (method public (increase-col self (delta (unspecified)))))
  (hub get-line)
  (hub set-line)
  (hub get-col)
  (hub set-col)
  (hub increase-line)
  (hub increase-col)
  (definition public (allocate-cell line <fx> col <fx>) <Cell>)
  (definition public undocumented (newcategory<Cell> class <category<Cell>> line col) <Cell>)
  (definition public undocumented (copy-cell c <Cell>) <Cell>)
  (definition public undocumented (cell=? c1 <Cell> c2 <Cell>) <bool>)
  (definition public undocumented onsite (cell<? c1 <Cell> c2 <Cell>) <bool>)
  (definition public undocumented onsite (cell<=? c1 <Cell> c2 <Cell>) <bool>)
  (definition public undocumented onsite (cell>? c1 <Cell> c2 <Cell>) <bool>)
  (definition public undocumented onsite (cell>=? c1 <Cell> c2 <Cell>) <bool>)
  (definition public undocumented (cell+ c1 <Cell> c2 <Cell>) <Cell>)
  (definition public undocumented (+Cellint c <Cell> n <int>) <Cell>)
  (definition public undocumented (cell- c1 <Cell> c2 <Cell>) <Cell>)
  (definition public undocumented (-Cellint c <Cell> n <int>) <Cell>)
  (definition public (cell-hash c <Cell>))
  (class Range extends Object
    (method meta override (marshall-object self object))
    (method meta override (unmarshall-object self content))
    (slot start)
    (slot end)
    (method override (initialize self s e))
    (method override (copy-object self deep?))
    (method override (compare-object self target))
    (method override (print self output readably))
    (method public (get-start self))
    (method public (get-end self))
    (method public virtual (extent self))
    (method public virtual (extended? self))
    (method public virtual (empty? self))
    (method public (inside? self n))
    (method public (before? self n))
    (method public (after? self n))
    (method public (intersect? self range))
    (method public (intersect self range)))
  (hub get-start)
  (hub get-end)
  (hub extent)
  (hub extended?)
  (hub empty?)
  (hub inside?)
  (hub before?)
  (hub after?)
  (hub intersect?)
  (hub intersect)
  (definition public (allocate-range start end) <Range>)
  (definition public undocumented (newcategory<Range> class <category<Range>> start end) <Range>)
  (definition public undocumented (range=? r1 <Range> r2 <Range>) <bool>)
  (class Range$Cell$ extends Object
    (method meta override (marshall-object self object))
    (method meta override (unmarshall-object self content))
    (slot start <Cell> getter generate)
    (slot end <Cell> getter generate)
    (method override (initialize self s <Cell> e <Cell>))
    (method override (copy-object self deep?))
    (method override (compare-object self target))
    (method override (print self output readably))
    (method public virtual (extent self) <Cell>)
    (method public virtual (extended? self))
    (method public virtual (empty? self))
    (method public (inside? self n <Cell>) <bool>)
    (method public (before? self n <Cell>) <bool>)
    (method public (after? self n <Cell>) <bool>)
    (method public (intersect? self range <Range$Cell$>) <bool>)
    (method public (intersect self range <Range$Cell$>)))
  (definition public (allocate-range$Cell$ start <Cell> end <Cell>) <Range$Cell$>)
  (definition public undocumented (newcategory<Range$Cell$> class <category<Range$Cell$>> start end) <Range$Cell$>)
  (definition public undocumented (=Range$Cell$Range$Cell$ r1 <Range$Cell$> r2 <Range$Cell$>) <bool>)
  (class Point extends Numeric
    (method meta override (marshall-object self object))
    (method meta override (unmarshall-object self content))
    (slot h <fx> getter generate)
    (slot v <fx> getter generate)
    (method override (initialize self h <fx> v <fx>))
    (method override (copy-object self deep?))
    (method override (compare-object self target))
    (method override (print self output readably))
    (method override (numeric-norm self))
    (method override (numeric-add self n))
    (method override (numeric-negate self))
    (method override (numeric-multiply self n))
    (method override (numeric-inverse self)))
  (hub get-h)
  (hub get-v)
  (definition public (allocate-point h <fx> v <fx>) <Point>)
  (definition public undocumented (newcategory<Point> class <category<Point>> h v) <Point>)
  (definition public undocumented (point=? p1 <Point> p2 <Point>) <bool>)
  (definition public undocumented (point+ p1 <Point> p2 <Point>) <Point>)
  (definition public undocumented (+Pointint p <Point> n <int>) <Point>)
  (definition public undocumented (point- p1 <Point> p2 <Point>) <Point>)
  (definition public undocumented (-Pointint p <Point> n <int>) <Point>)
  (definition public undocumented (-Point p <Point>) <Point>)
  (definition public undocumented (point* p <Point> n <int>) <Point>)
  (class Point$fl$ extends Numeric
    (method meta override (marshall-object self object))
    (method meta override (unmarshall-object self content))
    (slot h <fl> getter generate)
    (slot v <fl> getter generate)
    (method override (initialize self h <fl> v <fl>))
    (method override (copy-object self deep?))
    (method override (compare-object self target))
    (method override (print self output readably))
    (method override (numeric-norm self))
    (method override (numeric-add self n))
    (method override (numeric-negate self))
    (method override (numeric-multiply self n))
    (method override (numeric-inverse self)))
  (class Distance extends Numeric
    (method meta override (marshall-object self object))
    (method meta override (unmarshall-object self content))
    (slot x <fx> getter generate)
    (slot y <fx> getter generate)
    (method override (initialize self x <fx> y <fx>))
    (method override (copy-object self deep?))
    (method override (compare-object self target))
    (method override (print self output readably))
    (method override (numeric-norm self))
    (method override (numeric-add self n))
    (method override (numeric-negate self))
    (method override (numeric-multiply self n))
    (method override (numeric-inverse self)))
  (hub get-x)
  (hub get-y)
  (definition public (allocate-distance x <fx> y <fx>) <Distance>)
  (definition public undocumented (newcategory<Distance> class <category<Distance>> x y) <Distance>)
  (definition public undocumented (distance=? d1 <Distance> d2 <Distance>) <bool>)
  (definition public undocumented (distance+ d1 <Distance> d2 <Distance>) <Distance>)
  (definition public undocumented (distance- d1 <Distance> d2 <Distance>) <Distance>)
  (definition public undocumented (-Distance d <Distance>) <Distance>)
  (definition public undocumented (distance* d <Distance> n <int>) <Distance>)
  (definition public (distance-min d1 <Distance> d2 <Distance>) <Distance>)
  (definition public (distance-max d1 <Distance> d2 <Distance>) <Distance>)
  (class Dimension extends Numeric
    (method meta override (marshall-object self object))
    (method meta override (unmarshall-object self content))
    (slot width <fx> getter generate)
    (slot height <fx> getter generate)
    (method override (initialize self w <fx> h <fx>))
    (method override (copy-object self deep?))
    (method override (compare-object self target))
    (method override (print self output readably))
    (method override (numeric-norm self))
    (method override (numeric-add self n))
    (method override (numeric-negate self))
    (method override (numeric-multiply self n))
    (method override (numeric-inverse self)))
  (hub get-width)
  (hub get-height)
  (definition public (allocate-dimension width <fx> height <fx>) <Dimension>)
  (definition public undocumented (newcategory<Dimension> class <category<Dimension>> width height) <Dimension>)
  (definition public undocumented (dimension=? d1 <Dimension> d2 <Dimension>) <bool>)
  (definition public undocumented (dimension+ d1 <Dimension> d2 <Dimension>) <Dimension>)
  (definition public undocumented (dimension- d1 <Dimension> d2 <Dimension>) <Dimension>)
  (definition public undocumented (dimension* d <Dimension> n <int>) <Dimension>)
  (definition public (dimension-min d1 <Dimension> d2 <Dimension>) <Dimension>)
  (definition public (dimension-max d1 <Dimension> d2 <Dimension>) <Dimension>)
  (class Dimension$fl$ extends Numeric
    (method meta override (marshall-object self object))
    (method meta override (unmarshall-object self content))
    (slot width <fl> getter generate)
    (slot height <fl> getter generate)
    (method override (initialize self w <fl> h <fl>))
    (method override (copy-object self deep?))
    (method override (compare-object self target))
    (method override (print self output readably))
    (method override (numeric-norm self))
    (method override (numeric-add self n))
    (method override (numeric-negate self))
    (method override (numeric-multiply self n))
    (method override (numeric-inverse self)))
  (class Rect extends Object
    (method meta override (marshall-object self object))
    (method meta override (unmarshall-object self content))
    (method meta override (coerce-object self object))
    (slot left <fx> accessors generate)
    (slot top <fx> accessors generate)
    (slot right <fx> accessors generate)
    (slot bottom <fx> accessors generate)
    (method override (initialize self l <fx> t <fx> r <fx> b <fx>))
    (method override (copy-object self deep?))
    (method override (compare-object self target))
    (method override (print self output readably)))
  (hub get-left)
  (hub set-left)
  (hub get-top)
  (hub set-top)
  (hub get-right)
  (hub set-right)
  (hub get-bottom)
  (hub set-bottom)
  (definition public (rect? obj))
  (definition public (allocate-rect left <fx> top <fx> right <fx> bottom <fx>) <Rect>)
  (definition public undocumented (newcategory<Rect> class <category<Rect>> left top right bottom) <Rect>)
  (definition public undocumented (rect=? r1 <Rect> r2 <Rect>) <bool>)
  (definition public (empty-rect? rect))
  (definition public (empty-rect$fl$? rect))
  (class Rect$fl$ extends Object
    (method meta override (marshall-object self object))
    (method meta override (unmarshall-object self content))
    (method meta override (coerce-object self object))
    (slot left <fl> accessors generate)
    (slot top <fl> accessors generate)
    (slot right <fl> accessors generate)
    (slot bottom <fl> accessors generate)
    (method override (initialize self l <fl> t <fl> r <fl> b <fl>))
    (method override (copy-object self deep?))
    (method override (compare-object self target))
    (method override (print self output readably)))
  (definition public (rect$fl$? obj))
  (definition public (allocate-rect$fl$ left <fl> top <fl> right <fl> bottom <fl>) <Rect$fl$>)
  (definition public undocumented (newcategory<Rect$fl$> class <category<Rect$fl$>> left top right bottom) <Rect$fl$>)
  (definition public undocumented (rect$fl$=? r1 <Rect$fl$> r2 <Rect$fl$>) <bool>)
  (definition public (point->distance pt <Point>) <Distance>)
  (definition public (point->dimension pt <Point>) <Dimension>)
  (definition public (distance->point dist <Distance>) <Point>)
  (definition public (distance->dimension dist <Distance>) <Dimension>)
  (definition public (dimension->point dim <Dimension>) <Point>)
  (definition public (dimension->distance dim <Dimension>) <Distance>))
