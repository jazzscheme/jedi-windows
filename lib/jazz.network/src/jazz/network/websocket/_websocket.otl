(module jazz.network.websocket jazz
  (import (base64))
  (import (jazz.network))
  (import (jazz.network.websocket.foreign))
  (import (jazz.settings))
  (definition max-frame-size)
  (definition max-message-size)
  (definition (opcode->optype op))
  (definition (optype->opcode t))
  (definition protected websocket-debug?)
  (definition protected websocket-trace?)
  (definition (websocket-exception? exc))
  (definition (with-safe-websocket catcher thunk))
  (class Fragment extends Object
    (slot payload getter generate)
    (slot length getter generate)
    (slot masked? accessors generate)
    (slot masking-key getter generate)
    (slot fin getter generate)
    (slot optype getter generate)
    (method override (initialize self payload length masked? masking-key fin optype))
    (method override (print self output readably)))
  (hub get-payload)
  (hub get-length)
  (hub get-masked?)
  (hub set-masked?)
  (hub get-masking-key)
  (hub get-fin)
  (hub get-optype)
  (class WebSocket-Server extends TCP-Server
    (slot problem getter generate)
    (method override (initialize self problem . rest))
    (method override (accept-connection self port))
    (method (accept self key))
    (method (read-handshake self port))
    (method (write-handshake self key port))
    (method (websocket-unmask-frame-payload self payload len frame-masking-key))
    (method public (unmask self fragment))
    (method (read-frame-payload self port frame-payload-length))
    (method (read-frame-unsafe self total-size port))
    (method public (read-frame self total-size port))
    (method (write-frame-unsafe self optype data last-frame port))
    (method public (write-frame self optype data last-frame port)))
  (hub get-problem)
  (hub unmask)
  (hub read-frame)
  (hub write-frame))
