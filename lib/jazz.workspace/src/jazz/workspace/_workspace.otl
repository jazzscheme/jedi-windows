(module jazz.workspace jazz
  (export (jazz.workspace.ui (autoload Workspace-Button Workspace-Button)))
  (import (jazz.application))
  (import (jazz.component))
  (import (jazz.debuggee))
  (import (jazz.document))
  (import (jazz.feedback))
  (import (jazz.figure))
  (import (jazz.figure.preferences))
  (import (jazz.markup))
  (import (jazz.menu))
  (import (jazz.preferences))
  (import (jazz.reference))
  (import (jazz.resource))
  (import (jazz.syntax (phase syntax)))
  (import (jazz.text))
  (import (jazz.ui))
  (import (jazz.view))
  (import (jazz.window))
  (hub activate)
  (hub deactivate)
  (hub get-active)
  (hub get-associations)
  (hub get-class)
  (hub get-frame-model)
  (hub get-fullscreen?)
  (hub get-guest-model)
  (hub get-identifier)
  (hub get-insets)
  (hub get-maximized?)
  (hub get-mode)
  (hub get-model)
  (hub get-orientation)
  (hub get-shortcut)
  (hub get-state)
  (hub get-target)
  (hub get-zoomable?)
  (hub notify)
  (hub remember-stage)
  (hub set-caption?)
  (hub set-division)
  (hub set-fullscreen?)
  (hub set-insets)
  (hub set-maximized?)
  (hub set-mode)
  (hub set-model)
  (hub set-orientation)
  (hub set-separator)
  (hub set-shortcut)
  (hub set-state)
  (hub set-target)
  (hub set-zoomable?)
  (hub update-status)
  (definition Selected-Workspace)
  (definition public workspace-activation?)
  (definition public (current-workspace-preferences))
  (definition public (set-current-workspace-preferences preferences))
  (definition public (get-workspaces-preferences (error?: error? (unspecified))))
  (definition public (get-workspaces))
  (definition public (find-workspace name))
  (definition public (require-workspace name))
  (definition public (selected-workspace))
  (definition public (set-selected-workspace workspace))
  (definition public (select-named-workspace name))
  (definition public (select-current-workspace))
  (definition public (select-next-workspace))
  (definition public (select-previous-workspace))
  (definition public (select-docked class (name: name (unspecified)) (workspace: workspace (unspecified)) (focus?: focus? (unspecified))))
  (definition public (find-docked-class class))
  (definition public (for-each-window-docked proc))
  (definition public (docked-views))
  (definition public (for-each-splitter view proc))
  (definition public (ensure-unzoomed view))
  (definition package *stages*)
  (definition package *current-stage*)
  (definition public (get-stages))
  (definition public (get-active-stages))
  (definition public (first-stage))
  (definition public (last-stage))
  (definition public (current-stage))
  (definition public (set-current-stage stage (activate?: activate? (unspecified))))
  (definition public (reset-current-stage))
  (definition public (create-stage))
  (definition public (current-stage-border))
  (definition public (all-frames (include-invisibles?: include-invisibles? (unspecified))))
  (definition public (all-internal-frames (include-invisibles?: include-invisibles? (unspecified))))
  (definition public (all-external-frames (include-invisibles?: include-invisibles? (unspecified))))
  (definition public (first-frame))
  (definition public (second-frame))
  (definition public (last-frame))
  (definition public (collect-frames))
  (definition public (find-frame-if-guest pred))
  (definition public (find-frame-host guest-type))
  (definition public (find-frame-guest guest-type))
  (definition *active-frame*)
  (definition package (active-frame))
  (definition package (set-active-frame frame))
  (definition package (activate-current-frame))
  (definition public (front-frame))
  (definition public (current-stage-frames))
  (definition public (current-frame))
  (definition public (current-document))
  (definition public (default-frame-kind . rest))
  (definition public (new-frame guest/class . rest))
  (definition Internal-Frame-Cascade-Position)
  (definition Internal-Frame-Cascade-Step)
  (definition (collect-frames-positions host guest))
  (definition (cascade-frame-position host guest))
  (definition public (new-internal-frame guest/class . rest))
  (definition public (delete-stage))
  (definition public (delete-other-stages))
  (definition public (find-top-stage stage))
  (definition public (stage-splitter? splitter))
  (definition (delete-stages designer stage splitter stage-view closed-view))
  (definition protected (find-frame-brother stage frame))
  (definition public (split-stage-vertically))
  (definition public (split-stage-horizontally))
  (definition (split-stage direction))
  (definition public (move-frame))
  (definition public (clone-frame))
  (definition public (tie-frame-model))
  (definition public (untie-stage))
  (definition public (next-stage stage))
  (definition public (previous-stage stage))
  (definition public (navigate-next-stage))
  (definition public (navigate-previous-stage))
  (class Workspaces-Preferences extends Preferences
    (definition class-form)
    (method meta override (set-class-form self form))
    (method meta override (get-class-form self))
    (method meta override (get-class-forms self))
    (method meta override (get-class-descriptor self (context: context (unspecified))))
    (property active accessors generate)
    (property associations accessors generate))
  (hub set-active)
  (hub set-associations)
  (class Workspace-Preferences extends Figure-Preferences
    (definition class-form)
    (method meta override (set-class-form self form))
    (method meta override (get-class-form self))
    (method meta override (get-class-forms self))
    (method meta override (get-class-descriptor self (context: context (unspecified))))
    (property shortcut accessors generate)
    (property frame-model accessors generate)
    (property fullscreen? accessors generate)
    (method override (apply-preferences self (restore-focus?: restore-focus? (unspecified))))
    (method package (activate self (restore-focus?: restore-focus? (unspecified))))
    (method package (deactivate self))
    (method public (update-status self)))
  (hub set-frame-model)
  (class Toolbar-Preferences extends Figure-Preferences
    (definition class-form)
    (method meta override (set-class-form self form))
    (method meta override (get-class-form self))
    (method meta override (get-class-forms self))
    (method meta override (get-class-descriptor self (context: context (unspecified))))
    (property model accessors generate)
    (method override (apply-root self player))
    (method override (apply-preferences self (parent (unspecified))))
    (method (apply-to self toolbar))
    (method package (get-class self)))
  (class Splitter-Preferences extends Figure-Preferences
    (definition class-form)
    (method meta override (set-class-form self form))
    (method meta override (get-class-form self))
    (method meta override (get-class-forms self))
    (method meta override (get-class-descriptor self (context: context (unspecified))))
    (property separator accessors generate)
    (property state accessors generate)
    (property target accessors generate)
    (property orientation accessors generate)
    (property mode accessors generate)
    (property division accessors generate)
    (property insets accessors generate)
    (property zoomable? accessors generate)
    (method override (apply-root self player))
    (method override (apply-preferences self (parent (unspecified))))
    (method (apply-to self splitter))
    (method protected (apply-properties self splitter)))
  (hub get-separator)
  (hub get-division)
  (hub apply-properties)
  (class Menubar-Preferences extends Splitter-Preferences
    (definition class-form)
    (method meta override (set-class-form self form))
    (method meta override (get-class-form self))
    (method meta override (get-class-forms self)))
  (class Mainbar-Preferences extends Splitter-Preferences
    (definition class-form)
    (method meta override (set-class-form self form))
    (method meta override (get-class-form self))
    (method meta override (get-class-forms self)))
  (class Status-Preferences extends Splitter-Preferences
    (definition class-form)
    (method meta override (set-class-form self form))
    (method meta override (get-class-form self))
    (method meta override (get-class-forms self)))
  (class Commandbar-Preferences extends Splitter-Preferences
    (definition class-form)
    (method meta override (set-class-form self form))
    (method meta override (get-class-form self))
    (method meta override (get-class-forms self)))
  (class Minibuffer-Preferences extends Splitter-Preferences
    (definition class-form)
    (method meta override (set-class-form self form))
    (method meta override (get-class-form self))
    (method meta override (get-class-forms self)))
  (class Stage-Preferences extends Figure-Preferences
    (definition class-form)
    (method meta override (set-class-form self form))
    (method meta override (get-class-form self))
    (method meta override (get-class-forms self))
    (method meta override (get-class-descriptor self (context: context (unspecified))))
    (property maximized? accessors generate)
    (property guest-model accessors generate)
    (slot stage)
    (method override (apply-root self player))
    (method override (apply-preferences self (parent (unspecified))))
    (method (apply-to self stage-border))
    (method package (remember-stage self)))
  (hub set-guest-model)
  (class Pad-Preferences extends Figure-Preferences
    (definition class-form)
    (method meta override (set-class-form self form))
    (method meta override (get-class-form self))
    (method meta override (get-class-forms self))
    (method meta override (get-class-descriptor self (context: context (unspecified))))
    (method override (apply-root self player))
    (method override (apply-preferences self (parent (unspecified))))
    (method (apply-to self pad)))
  (class Docked-Preferences extends Figure-Preferences
    (method meta override (get-class-descriptor self (context: context (unspecified))))
    (property identifier accessors generate)
    (property model accessors generate)
    (property caption? accessors generate)
    (property zoomable? accessors generate)
    (method override (apply-preferences self (parent (unspecified))))
    (method protected virtual (create-host self class))
    (method protected virtual (setup-host self host)))
  (hub set-identifier)
  (hub get-caption?)
  (hub create-host)
  (hub setup-host))
