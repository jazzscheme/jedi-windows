(module jazz.io jazz
  (export (jazz.io.Category-Moniker (autoload Category-Moniker Category-Moniker Category-Moniker)))
  (export (jazz.io.Directory-Group (autoload Directory-Group Directory-Group-Class Directory-Group Directory-Group-Class Directory-Group Directory-Group-Class)))
  (export (jazz.io.Manifest (autoload Manifest Manifest Manifest)))
  (export (jazz.io.Path (autoload Path Path Path)))
  (export (jazz.io.URL (autoload URL URL URL)))
  (import (jazz.time))
  (hub anchorize)
  (hub collect-files)
  (hub compare-parse)
  (hub context-alias?)
  (hub context-setup?)
  (hub copy-times)
  (hub count-directories)
  (hub count-files)
  (hub create)
  (hub create-directories)
  (hub delete)
  (hub delete-empty)
  (hub duplicate)
  (hub empty)
  (hub exists?)
  (hub expand)
  (hub follow-component)
  (hub follow-form)
  (hub get-alias)
  (hub get-anchor)
  (hub get-anchors)
  (hub get-attributes)
  (hub get-base)
  (hub get-children)
  (hub get-content)
  (hub get-context)
  (hub get-data)
  (hub get-descendant-anchors)
  (hub get-directory)
  (hub get-extension)
  (hub get-file)
  (hub get-hidden?)
  (hub get-hierarchy)
  (hub get-last-modification-seconds)
  (hub get-last-modification-time)
  (hub get-list)
  (hub get-name)
  (hub get-parent)
  (hub get-path)
  (hub get-protocol)
  (hub get-size)
  (hub get-table)
  (hub get-title)
  (hub install-directory)
  (hub install-file)
  (hub is-directory?)
  (hub iterate-directory)
  (hub load-binary)
  (hub load-form)
  (hub load-lines)
  (hub meta-root?)
  (hub new-brother)
  (hub new-directory)
  (hub new-file)
  (hub new-unique-file)
  (hub overwrite-read-only)
  (hub parse)
  (hub platform-parse)
  (hub present)
  (hub present-location)
  (hub present-name)
  (hub read-only?)
  (hub rename)
  (hub save-binary)
  (hub save-lines)
  (hub set-context)
  (hub set-parent)
  (hub set-path)
  (hub set-read/write)
  (hub subpath)
  (definition *eol-encoding*)
  (definition public (path-settings pathname . rest))
  (class Alias extends Object
    (slot path getter generate)
    (slot parent accessors generate)
    (slot table getter explicit)
    (method override (initialize self path (parent: parent (unspecified))))
    (method override (print self output readably))
    (method package (get-anchor self))
    (method public (get-table self))
    (method public (get-children self))
    (method public (get-descendant-anchors self))
    (method public (get-anchors self)))
  (class Unknown-Alias-Exception extends Exception
    (slot alias getter generate)
    (method override (initialize self alias))
    (method override (get-message self)))
  (definition *root-alias*)
  (definition public (get-aliases))
  (definition public (get-root-alias))
  (definition public (is-alias? name))
  (definition public (valid-alias? name))
  (definition public (find-alias-path name (error?: error? (unspecified))))
  (definition public (set-alias! name path))
  (definition public (find-alias name (root: root (unspecified)) (error?: error? (unspecified))))
  (definition protected (find-path-alias path root error?))
  (definition public (require-alias name))
  (definition protected (canonical-alias name root))
  (definition public (register-alias name path (root: root (unspecified)) (override?: override? (unspecified))))
  (definition public (unregister-alias name (root: root (unspecified))))
  (definition public (for-each-alias alias proc))
  (definition public initialize-aliases)
  (definition (register-platform-aliases))
  (definition public (register-repository-aliases repository))
  (definition public (register-repository-alias repository))
  (definition public (register-resources-alias app-alias product-name))
  (definition public (find-kernel-file filename))
  (definition public (require-kernel-file filename))
  (definition (validate-alias name path))
  (definition public (filename-name filename <string>) <string>)
  (definition public (filename-base filename <string>))
  (definition public (filename-spine filename <string>))
  (definition public (filename-extension filename <string>))
  (definition public (filename-dir filename <string>))
  (definition public (filename=? x y))
  (definition public (extension=? x y))
  (definition public filename=?-hash)
  (definition public filename-test)
  (definition public filename-compare)
  (definition public (normalize-filename-separators filename <string>))
  (definition public (platform-filename filename <string>))
  (definition public (tokenise-filename filename <string>))
  (definition public (tokenise-windows filename <string>))
  (definition (parse-file file))
  (definition default-tolerance)
  (definition public (different-times? time1 time2 (tolerance: tolerance (unspecified))))
  (definition public (different-file-times? file1 file2))
  (definition public (different-file-digests? file1 file2))
  (definition public (different-file-times/digests? file1 file2))
  (class Moniker-Class extends Class
    (method public virtual (get-protocol self)))
  (class Moniker metaclass Moniker-Class extends Object
    (method public virtual (compare-parse self object))
    (method public virtual (present self))
    (method public virtual (present-base self))
    (method public virtual (present-name self))
    (method public virtual (present-location self))
    (method public virtual (exists? self))
    (method public (read-only? self))
    (method public (read/write? self))
    (method public (set-read-only self))
    (method public (set-read/write self))
    (method public virtual (get-writable? self))
    (method public virtual (set-writable? self flag))
    (method public virtual (writable? self))
    (method public virtual (get-last-modification-seconds self))
    (method public virtual (get-last-modification-time self))
    (method public virtual (get-file self))
    (method public virtual (get-name self))
    (method public virtual (get-base self))
    (method public virtual (get-extension self))
    (method public virtual (get-list self))
    (method public virtual (get-parent self))
    (method public (get-hierarchy self))
    (method public virtual (get-content self . rest))
    (method public virtual (get-children self . rest))
    (method public virtual (is-different? self moniker))
    (method public (relocated-list self old-root new-root))
    (method public virtual (load-lines self . rest))
    (method public virtual (save-lines self lines . rest))
    (method public virtual (load-form self)))
  (hub present-base)
  (hub read/write?)
  (hub set-read-only)
  (hub get-writable?)
  (hub set-writable?)
  (hub writable?)
  (hub is-different?)
  (hub relocated-list)
  (definition platform-separator)
  (class Pathname-Class extends Moniker-Class
    (method override (marshall-object self obj))
    (method override (unmarshall-object self content)))
  (class Pathname metaclass Pathname-Class extends Moniker
    (slot path)
    (slot context accessors generate)
    (method override (initialize self lst))
    (method protected virtual (validate-components self object))
    (method public (parse self . rest))
    (method public (parse-uri self))
    (method public (platform-parse self))
    (method package virtual (meta-root? self))
    (method protected virtual (add-suffix self output))
    (method override public (present-location self))
    (method public (relocated-pathname self old-root new-root))
    (method public virtual (create self))
    (method public virtual (delete self))
    (method public virtual (duplicate self dst))
    (method public (rename self dst (error?: error? (unspecified))))
    (method override (compare-object self target))
    (method override (compare-parse self object))
    (method public (context-alias? self))
    (method public (context-setup? self))
    (method public (pathname-alias? self alias))
    (method public (pathname-alias self alias))
    (method public (expand self))
    (method public (expand-context self))
    (method override (get-list self))
    (method public (set-list self value))
    (method override (get-name self))
    (method (effective-name self lst))
    (method override (get-base self))
    (method override (get-extension self))
    (method override (get-parent self))
    (method public (get-brother self name))
    (method public virtual (new-brother self name))
    (method public virtual (get-directory self))
    (method public (get-attributes self (error?: error? (unspecified))))
    (method public (set-attributes self flags))
    (method override (get-writable? self))
    (method override (set-writable? self flag))
    (method override (exists? self))
    (method package (is-directory? self))
    (method public virtual (create-directories self))
    (method public (subpath self target))
    (method public (subpath? self target))
    (method public (anchor-to self anchor (error?: error? (unspecified))))
    (method public (anchorize self (anchors: anchors (unspecified)) (ignored-anchors: ignored-anchors (unspecified))))
    (method override (setup-context self toplevel-context)))
  (hub validate-components)
  (hub parse-uri)
  (hub add-suffix)
  (hub relocated-pathname)
  (hub pathname-alias?)
  (hub pathname-alias)
  (hub expand-context)
  (hub set-list)
  (hub get-brother)
  (hub set-attributes)
  (hub subpath?)
  (hub anchor-to)
  (definition public (pathname? object))
  (definition public (pathname=? x <Moniker> y <Moniker>))
  (definition public (pathname-exists? pathname <Pathname>))
  (definition public (pathname-delete pathname <Pathname>))
  (definition public (pathname-last-modification-seconds pathname <Pathname>))
  (definition public (pathname-hash pathname <Pathname>))
  (class File-Class extends Pathname-Class
    (method override (get-protocol self)))
  (class File metaclass File-Class extends Pathname
    (method override (print self output readably))
    (method override (new-brother self name))
    (method override (present self))
    (method override (get-file self))
    (method override (get-directory self))
    (method override (create self))
    (method override (create-directories self))
    (method public (copy-times self dst))
    (method override (duplicate self dst (overwrite?: overwrite? (unspecified)) (overwrite-read-only?: overwrite-read-only? (unspecified)) (preserve-times?: preserve-times? (unspecified)) (feedback: feedback (unspecified))))
    (method public (install-file self dst (feedback: feedback (unspecified))))
    (method override (delete self (overwrite-read-only?: overwrite-read-only? (unspecified)) (error?: error? (unspecified))))
    (method package (overwrite-read-only self overwrite-read-only?))
    (method public (get-size self))
    (method override (get-last-modification-seconds self))
    (method override (get-last-modification-time self))
    (method public (set-modification-time self time))
    (method public (touch self))
    (method public (get-hidden? self))
    (method public (set-hidden? self flag))
    (method public (symbolic-link? self))
    (method override (writable? self))
    (method public (clone-file self extension))
    (method override (load-lines self (char-encoding: char-encoding (unspecified)) (char-encoding-errors: char-encoding-errors (unspecified))))
    (method override (save-lines self lines (char-encoding: char-encoding (unspecified)) (eol-encoding: eol-encoding (unspecified))))
    (method package (load-binary self))
    (method package (save-binary self content)))
  (hub set-modification-time)
  (hub touch)
  (hub set-hidden?)
  (hub symbolic-link?)
  (hub clone-file)
  (definition public (file? object))
  (definition timestamped-mutex)
  (definition protected (path-timestamp))
  (definition public (timestamped-directory dir prefix))
  (definition public (timestamped-file dir prefix ext))
  (definition public (ensure-read/write moniker (cancel-action: cancel-action (unspecified))))
  (definition public (backup-file file))
  (definition public (fail-safe-save file proc))
  (class Directory-Class extends Pathname-Class
    (method override (get-protocol self)))
  (class Directory metaclass Directory-Class extends Pathname
    (method override (print self output readably))
    (method override (new-brother self name))
    (method override (present self))
    (method override (get-directory self))
    (method override (get-last-modification-time self))
    (method override (get-parent self))
    (method override (create self))
    (method override (create-directories self))
    (method public (new-file self name) <File>)
    (method public (new-directory self name) <Directory>)
    (method public (new-unique-file self name (separator: separator (unspecified))))
    (method public (new-unique-directory self name (separator: separator (unspecified))))
    (method (add-context self pathname))
    (method override (duplicate self dst (overwrite?: overwrite? (unspecified)) (overwrite-read-only?: overwrite-read-only? (unspecified)) (copier: copier (unspecified)) (copy?: copy? (unspecified)) (preserve-times?: preserve-times? (unspecified)) (feedback: feedback (unspecified))))
    (method public (install-directory self dst (filter: filter (unspecified)) (feedback: feedback (unspecified)) (force-feedback?: force-feedback? (unspecified)) (progress-feedback: progress-feedback (unspecified))))
    (method override (delete self (overwrite-read-only?: overwrite-read-only? (unspecified)) (feedback: feedback (unspecified))))
    (method public (empty self (overwrite-read-only?: overwrite-read-only? (unspecified)) (feedback: feedback (unspecified))))
    (method public (delete-empty self))
    (method public (delete-empty-directories self))
    (method public (delete-if-empty self))
    (method public (empty? self))
    (method override (get-content self (nodes?: nodes? (unspecified)) (leaves?: leaves? (unspecified))))
    (method override (add-suffix self output))
    (method public (collect-files self (predicate (unspecified))))
    (method public (collect-directories self))
    (method public (count-directories self))
    (method public virtual (iterate-directory self proc (full?: full? (unspecified)) (files?: files? (unspecified)) (directories?: directories? (unspecified)) (sort?: sort? (unspecified)) (sort-type?: sort-type? (unspecified)) (sort-test: sort-test (unspecified)) (recursive?: recursive? (unspecified)) (ignored-toplevel-dirnames: ignored-toplevel-dirnames (unspecified)) (ignored-toplevel-filenames: ignored-toplevel-filenames (unspecified)) (ignored-dirnames: ignored-dirnames (unspecified))))
    (definition (directory-content-patch path))
    (method public (count-files self (ignored-dirnames: ignored-dirnames (unspecified)) (filter: filter (unspecified)) (max-count: max-count (unspecified)))))
  (hub new-unique-directory)
  (hub delete-empty-directories)
  (hub delete-if-empty)
  (hub empty?)
  (hub collect-directories)
  (class Windows-Meta-Root extends Pathname
    (method override (initialize self))
    (method override (get-name self))
    (method override (present self))
    (method override (get-parent self))
    (method override (get-directory self))
    (method override (meta-root? self))
    (method override (exists? self))
    (method override (get-content self (nodes?: nodes? (unspecified)) (leaves?: leaves? (unspecified)))))
  (definition public (directory? obj))
  (definition public (digest-directory dir algorithm (filter: filter (unspecified))))
  (definition public (current-directory-get))
  (definition public (current-directory-set! directory))
  (definition public (with-preserved-current-directory proc))
  (definition public (normalize-directory dirname))
  (definition public (load-table table file (error-on-duplicates? (unspecified))))
  (definition public (save-table table file))
  (definition public (different-file-contents? file1 file2))
  (definition public (different-file-contents-no-whitespace? file1 file2))
  (definition public Scheme-Extensions)
  (definition public Clojure-Extensions)
  (definition public CommonLisp-Extensions)
  (definition public Jazz-Extensions)
  (definition public Jazz-All-Extensions)
  (definition public Lisp-Extensions)
  (definition public C-Extensions)
  (definition public Java-Extensions)
  (definition public SQL-Extensions)
  (definition public Text-Extensions)
  (definition public Textual-Extensions)
  (definition public Binary-Extensions)
  (definition public (effective-extensions obj))
  (definition Scheme-Include-Extensions)
  (definition Clojure-Include-Extensions)
  (definition CommonLisp-Include-Extensions)
  (definition Jazz-Include-Extensions)
  (definition Lisp-Include-Extensions)
  (definition C-Include-Extensions)
  (definition Java-Include-Extensions)
  (definition Text-Include-Extensions)
  (definition Textual-Include-Extensions)
  (definition package (effective-include-extensions extensions))
  (definition Scheme-Catalog-Extensions)
  (definition Clojure-Catalog-Extensions)
  (definition CommonLisp-Catalog-Extensions)
  (definition Jazz-Catalog-Extensions)
  (definition C-Catalog-Extensions)
  (definition Java-Catalog-Extensions)
  (definition Text-Catalog-Extensions)
  (definition Textual-Catalog-Extensions)
  (definition package (effective-catalog-extensions extensions))
  (definition public (extension-constituent-test ext))
  (definition public (parse-url url))
  (definition public (url-decode string))
  (definition public (url-encode string)))
