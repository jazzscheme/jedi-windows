(module jazz.graphic.Surface jazz
  (import (jazz.cairo))
  (import (jazz.geometry))
  (import (jazz.graphic))
  (import (jazz.graphic.image))
  (import (jazz.io))
  (import (jazz.resource))
  (class Surface extends Object
    (slot handle getter generate)
    (slot context getter generate)
    (slot font <Font> getter generate)
    (slot glyph-array)
    (slot glyph-array-length <fx>)
    (slot handle-shared?)
    (method override (initialize self handle . rest))
    (method override (destroy self))
    (method (destroy-glyph-array self))
    (method (destroy-surface self))
    (method (destroy-context self))
    (method public (cairo-finish self))
    (method public (flush self))
    (method public (set-device-scale self scale <fl>))
    (method public virtual (painting-tree-algorithm self))
    (method public (logical->device self shape <Object>))
    (method public (device->logical self shape <Object>))
    (method public (with-preserved-matrix self thunk <procedure>))
    (method public (present-matrix self))
    (method public (with-transformation self h <fx> v <fx> transformation <foreign+> thunk <procedure>))
    (method public (with-pristine-transformation self thunk <procedure>))
    (method public (with-clipping-transformation self h <fx> v <fx> width <fx> height <fx> transformation <foreign+> thunk <procedure>))
    (method public (with-pristine-clipping-transformation self thunk <procedure>))
    (method public (get-clipper self) <Rect>)
    (method public (set-clipper self rect <Rect>))
    (method public (reset-clipper self))
    (method public (clip self rect <Rect>))
    (method public (with-preserved-clipper self thunk <procedure>))
    (method public (with-clip self rect <Rect> thunk <procedure>))
    (method public (with-clipout self outer <Rect> inner <Rect> thunk <procedure>))
    (method public (set-text-color self color <Color>))
    (method public (get-char-width self n <fx>))
    (method public (get-char-widths self (first: first (unspecified)) (last: last (unspecified))))
    (method public (get-text-extent self text <string>))
    (method public (get-font-height self))
    (method public (get-text-metrics self))
    (method public (get-text-width self text <string>) <fx>)
    (method public (draw-text self h <fx> v <fx> str <string> color <Color> (shadow-color: shadow-color (unspecified)) (enabled?: enabled? (unspecified))))
    (method public (draw-tabbed-text self h <fx> v <fx> str <Sequence> tabs origin <fx> color <Color> highlight-color <Color+> line-height <fx>) <fx>)
    (method public (fill-region self region <Region> color))
    (method public (gradient-fill self bounds <Rect> stops (direction: direction (unspecified))))
    (method public (gradient-fill-rect self rect <Rect> stops (direction: direction (unspecified))))
    (method public (ellipse self rect <Rect> outside inside))
    (method public (ellipse$fl$ self rect <Rect$fl$> outside inside))
    (method public (draw-surface self handle x <fl> y <fl> (filter: filter (unspecified)) (alpha: alpha (unspecified))))
    (method public (fill-background self rect background))
    (method public (fill-gradient self rect <Rect> gradient <Gradient>))
    (method public (fill-texture self rect <Rect> texture <Texture>))
    (method public (fill-image self rect <Rect> image <Image> (mode: mode (unspecified)) (position: position (unspecified)) (size: size (unspecified)) (alpha: alpha (unspecified))))
    (method public (draw-scroll-bar self rect <Rect> direction))
    (method public (draw-caption self rect <Rect> type (pushed? (unspecified)) (in-rectangle? (unspecified))))
    (method public (draw-radio-button self rect <Rect> (radio-background: radio-background (unspecified)) (inactive?: inactive? (unspecified)) (selected?: selected? (unspecified))))
    (method public (draw-push-button self rect <Rect> (pushed? (unspecified))))
    (method public (set-source-surface self surface/handle x <fl> y <fl>))
    (method public (blit-surface self surface (destination: destination (unspecified)) (alpha: alpha (unspecified))))
    (method public (blit-surface-ext self surface h <fl> v <fl> width <fl> height <fl> destination-h <fl> destination-v <fl>))
    (method public (set-mask-surface self surface))
    (method public (set-font self font <Font>))
    (method public (set-style self style))
    (method public (draw-edge self rect <Rect> (edges: edges (unspecified)) (inner: inner (unspecified)) (outer: outer (unspecified))))
    (method public (fill-rect self rect <Rect> color <Color>))
    (method public (fill-insets self rect <Rect> insets <Rect> color <Color>))
    (method public (draw-check self h <fx> v <fx>))
    (method public (draw-raised self rect <Rect>))
    (method public (draw-arrow-tip self h v size <fx> direction <symbol>))
    (method public (draw-sorted self h v offset title sorted))
    (method public (draw-filtered self h v offset title filtered))
    (method public (draw-diamond self h v color))
    (method public (draw-highlighted self h v offset title highlighted color))
    (method public (draw-checkerboard self horizontal vertical (alpha: alpha (unspecified))))
    (method public virtual (show-page self))
    (method (with-outside/inside self outside inside outside-proc inside-proc))
    (method virtual public (frame-rect self rect <Rect> color (line-width (unspecified))))
    (method public (frame-partial-rect self rect <Rect> sides color))
    (method public (frame-round-rect self rect <Rect> color))
    (method public (rectangle self rect <Rect> outside inside))
    (method public (cairo-move-to self h <fl> v <fl>))
    (method public (cairo-line-to self h <fl> v <fl>))
    (method public (arc self hc <fl> vc <fl> radius <fl> angle1 <fl> angle2 <fl>))
    (method public (arc-negative self hc <fl> vc <fl> radius <fl> angle1 <fl> angle2 <fl>))
    (method public (curve-to-relative self dx1 <fl> dy1 <fl> dx2 <fl> dy2 <fl> dx3 <fl> dy3 <fl>))
    (method public (close-path self))
    (definition (create-linear-pattern sh <fl> sv <fl> eh <fl> ev <fl>))
    (method public (get-source self))
    (method public (set-source self pattern))
    (method public (translate self th <fl> tv <fl>))
    (method public (scale self sh <fl> sv <fl>))
    (method public (rotate self angle <fl>))
    (method public (set-matrix self xx yx xy yy x0 y0))
    (method public (move-to self h <fl> v <fl>))
    (method public (line-path self h <fl> v <fl>))
    (method public (line-to self h <fl> v <fl>))
    (method public (line-to-preserve self h <fl> v <fl>))
    (method public (line-to-no-stroke self h <fl> v <fl>))
    (method public (line-to-rel self dh <fl> dv <fl>))
    (method public (move-to-rel self dh <fl> dv <fl>))
    (method public (line self h v dest-h dest-v))
    (method public (pixel-to self h <fl> v <fl>))
    (method public (set-line-width self w <fl>))
    (method public (get-line-width self))
    (method public (get-operator self))
    (method public (set-operator self op))
    (method public (get-antialias self))
    (method public (set-antialias self antialias))
    (method public (stroke self))
    (method public (stroke-preserve self))
    (method public (fill self))
    (method public (fill-preserve self))
    (method public (paint self))
    (method public (paint-with-alpha self alpha <fl>))
    (method public (clear self))
    (method public (draw-rectangle self rect <Rect>))
    (method public (draw-rectangle$fl$ self rect <Rect$fl$>))
    (method public (draw-region self region))
    (method public (set-color self color <Color>))
    (definition (add-color-stop pattern offset <fl> color <Color>))
    (method public (export-to-png self file <File>))
    (method public (cairo-status self))
    (method public (cairo-surface-status self)))
  (hub get-handle)
  (hub get-context)
  (hub get-font)
  (hub cairo-finish)
  (hub flush)
  (hub set-device-scale)
  (hub painting-tree-algorithm)
  (hub logical->device)
  (hub device->logical)
  (hub with-preserved-matrix)
  (hub present-matrix)
  (hub with-transformation)
  (hub with-pristine-transformation)
  (hub with-clipping-transformation)
  (hub with-pristine-clipping-transformation)
  (hub get-clipper)
  (hub set-clipper)
  (hub reset-clipper)
  (hub clip)
  (hub with-preserved-clipper)
  (hub with-clip)
  (hub with-clipout)
  (hub set-text-color)
  (hub get-char-width)
  (hub get-char-widths)
  (hub get-text-extent)
  (hub get-font-height)
  (hub get-text-metrics)
  (hub get-text-width)
  (hub draw-text)
  (hub draw-tabbed-text)
  (hub fill-region)
  (hub gradient-fill)
  (hub gradient-fill-rect)
  (hub ellipse)
  (hub ellipse$fl$)
  (hub draw-surface)
  (hub fill-background)
  (hub fill-gradient)
  (hub fill-texture)
  (hub fill-image)
  (hub draw-scroll-bar)
  (hub draw-caption)
  (hub draw-radio-button)
  (hub draw-push-button)
  (hub set-source-surface)
  (hub blit-surface)
  (hub blit-surface-ext)
  (hub set-mask-surface)
  (hub set-font)
  (hub set-style)
  (hub draw-edge)
  (hub fill-rect)
  (hub fill-insets)
  (hub draw-check)
  (hub draw-raised)
  (hub draw-arrow-tip)
  (hub draw-sorted)
  (hub draw-filtered)
  (hub draw-diamond)
  (hub draw-highlighted)
  (hub draw-checkerboard)
  (hub show-page)
  (hub frame-partial-rect)
  (hub frame-round-rect)
  (hub rectangle)
  (hub cairo-move-to)
  (hub cairo-line-to)
  (hub arc)
  (hub arc-negative)
  (hub curve-to-relative)
  (hub close-path)
  (hub get-source)
  (hub set-source)
  (hub translate)
  (hub scale)
  (hub rotate)
  (hub set-matrix)
  (hub move-to)
  (hub line-path)
  (hub line-to)
  (hub line-to-preserve)
  (hub line-to-no-stroke)
  (hub line-to-rel)
  (hub move-to-rel)
  (hub line)
  (hub pixel-to)
  (hub set-line-width)
  (hub get-line-width)
  (hub get-operator)
  (hub set-operator)
  (hub get-antialias)
  (hub set-antialias)
  (hub stroke)
  (hub stroke-preserve)
  (hub fill)
  (hub fill-preserve)
  (hub paint)
  (hub paint-with-alpha)
  (hub clear)
  (hub draw-rectangle)
  (hub draw-rectangle$fl$)
  (hub draw-region)
  (hub set-color)
  (hub export-to-png)
  (hub cairo-status)
  (hub cairo-surface-status))
