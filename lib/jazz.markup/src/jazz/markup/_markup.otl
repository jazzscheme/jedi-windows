(module jazz.markup jazz
  (export (jazz.markup.syntax (phase syntax)))
  (export (jazz.markup.autoload))
  (export (jazz.markup.parse))
  (import (jazz.markup.autoload))
  (import (jazz.component.autoload))
  (import (jazz.component.hubs))
  (import (jazz.io))
  (hub ->markup)
  (hub add-child)
  (hub add-properties)
  (hub append-child)
  (hub append-parent)
  (hub children->markup)
  (hub composite?)
  (hub find-by)
  (hub find-name)
  (hub find-node)
  (hub first-child)
  (hub for-each-ancestor)
  (hub for-each-parent)
  (hub get-alias)
  (hub get-child-location)
  (hub get-child-text)
  (hub get-children)
  (hub get-location)
  (hub get-parent)
  (hub get-preferences)
  (hub get-properties)
  (hub get-property)
  (hub get-tab-size)
  (hub get-tag)
  (hub get-target)
  (hub get-text)
  (hub get-toplevel)
  (hub has-property?)
  (hub parse)
  (hub print-node)
  (hub properties->markup)
  (hub remove-child)
  (hub remove-property)
  (hub render)
  (hub set-children)
  (hub set-parent)
  (hub set-parent-value)
  (hub set-properties)
  (hub set-property)
  (hub set-target)
  (hub set-text)
  (hub simple?)
  (hub single-line?)
  (hub tag->markup)
  (hub transform)
  (definition public (get-class-form-with-origin form method-path))
  (definition public (parse-markup markup (preferences-class: preferences-class (unspecified)) (parser-class: parser-class (unspecified))))
  (definition public (transform-markup node transformation))
  (definition public (render-markup node output (preferences-class: preferences-class (unspecified)) (renderer-class: renderer-class (unspecified))))
  (definition public (iterate-nodes node proc))
  (definition public (markup->form expr (locator (unspecified))))
  (definition package (node->form node))
  (definition package (form->node form))
  (definition public (construct-form expr locator (data (unspecified))))
  (definition public (locators-ref locators symbol))
  (definition public (register-trait-tag tag))
  (definition (trait-tag? tag))
  (definition public printing-doc?)
  (definition public pretty-print-forms?)
  (definition public (form->string form level (include-form?: include-form? (unspecified)) (space-tag?: space-tag? (unspecified)) (space-name?: space-name? (unspecified)) (indent-first?: indent-first? (unspecified))))
  (definition public (print-file-form form level output (include-form?: include-form? (unspecified)) (space-tag?: space-tag? (unspecified)) (space-name?: space-name? (unspecified)) (indent-first?: indent-first? (unspecified))))
  (definition public (print-form form level output))
  (definition public (save-markup markup file . rest))
  (definition public (read-markup-from-port port (source (unspecified))))
  (definition public (read-markup file))
  (definition public (read-markup-string string))
  (definition public (load-markup file))
  (definition public (load-markup-string file)))
