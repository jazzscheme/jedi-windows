(module jazz.presence jazz
  (export (jazz.presence.autoload))
  (import (jazz.presence.autoload))
  (import (jazz.presence.transmission))
  (import (jazz.network))
  (import (jazz.settings))
  (import (jazz.version))
  (hub accept-remote)
  (hub close-connection)
  (hub connect-remote)
  (hub debug-remote)
  (hub debug-simplify)
  (hub disconnect)
  (hub disconnect-connection)
  (hub find-connection)
  (hub find-object)
  (hub get-address)
  (hub get-exception)
  (hub get-ior)
  (hub get-listener)
  (hub get-manifest)
  (hub get-object)
  (hub get-port)
  (hub get-presence)
  (hub get-reason)
  (hub get-reference)
  (hub get-remote-title)
  (hub get-service)
  (hub get-stub-interface)
  (hub get-uuid)
  (hub get-values)
  (hub get-write-mutex)
  (hub invoke)
  (hub invoke-live?)
  (hub live?)
  (hub load-object)
  (hub load-reference)
  (hub local-class)
  (hub new-register-proxy)
  (hub process)
  (hub proxy-values)
  (hub read-message)
  (hub register-object)
  (hub remote-class)
  (hub require-connection)
  (hub require-object)
  (hub set-values)
  (hub startup-process)
  (hub start-listener)
  (hub stop-listener)
  (hub stub-reference)
  (hub unregister-object)
  (hub write-message)
  (definition supports-binary?)
  (definition default-presence-priority)
  (definition protected presence-priorities)
  (definition protected (set-presence-priority purpose priority))
  (definition protected (get-presence-priority purpose))
  (definition public debugging-priority)
  (definition public working-priority)
  (definition public presence-priority)
  (definition protected presences)
  (definition protected uuid-presences)
  (definition presences-mutex)
  (definition (with-presences-mutex thunk))
  (definition protected (find-presence purpose))
  (definition protected (require-presence purpose))
  (definition protected (find-presence-by-uuid uuid))
  (definition protected (iterate-presences proc))
  (definition protected (collect-presences))
  (definition invoke-timeout)
  (definition (default-accept-handler proc presence))
  (definition (default-connect-handler proc presence))
  (definition (default-invoke-handler proc connection))
  (definition (default-process-handler proc connection))
  (definition (default-execute-handler proc connection))
  (class Remote-Presence extends Object
    (slot purpose getter generate)
    (slot uuid getter generate)
    (slot priority getter generate)
    (slot register getter generate)
    (slot listener getter generate)
    (slot connections getter generate)
    (slot connections-mutex getter generate)
    (slot code accessors generate)
    (slot version accessors generate)
    (slot already-connected accessors generate)
    (slot accept-handler accessors generate)
    (slot connect-handler accessors generate)
    (slot invoke-handler accessors generate)
    (slot process-handler accessors generate)
    (slot processing-handler accessors generate)
    (slot execute-handler accessors generate)
    (method override (initialize self purpose))
    (method override (print self output readably))
    (method (start-listener self host service alternate-service))
    (method (stop-listener self))
    (method (accept-remote self port))
    (method (connect-remote self host service reference))
    (method (with-connections-mutex self thunk))
    (method (register-connection self remote-uuid connection))
    (method (find-connection self remote-uuid))
    (method (require-connection self remote-uuid))
    (method (close-connection self remote-uuid connection))
    (method (disconnect-connection self remote-uuid connection))
    (method (debug-remote self arrow remote-title remote-uuid action . rest))
    (method (debug-simplify self obj)))
  (hub get-purpose)
  (hub get-priority)
  (hub get-register)
  (hub get-connections)
  (hub get-connections-mutex)
  (hub get-code)
  (hub set-code)
  (hub get-version)
  (hub set-version)
  (hub get-already-connected)
  (hub set-already-connected)
  (hub get-accept-handler)
  (hub set-accept-handler)
  (hub get-connect-handler)
  (hub set-connect-handler)
  (hub get-invoke-handler)
  (hub set-invoke-handler)
  (hub get-process-handler)
  (hub set-process-handler)
  (hub get-processing-handler)
  (hub set-processing-handler)
  (hub get-execute-handler)
  (hub set-execute-handler)
  (class Remote-Connection extends Object
    (slot presence getter generate)
    (slot port getter generate)
    (slot binary? getter generate)
    (slot thread accessors generate)
    (slot write-mutex getter generate)
    (slot remote-uuid getter generate)
    (slot remote-title getter generate)
    (slot service getter generate)
    (slot address getter generate)
    (slot invocations getter generate)
    (slot invocations-mutex getter generate)
    (slot closing? accessors generate)
    (slot invoke-handler getter generate)
    (slot process-handler getter generate)
    (slot processing-handler getter generate)
    (slot execute-handler getter generate)
    (method override (initialize self presence port binary? remote-uuid remote-title service address invoke-handler process-handler processing-handler execute-handler))
    (method override (destroy self))
    (method (disconnect self))
    (method override (print self output readably))
    (method (register-invocation self mutex))
    (method (unregister-invocation self mutex))
    (method (sever-invocations self))
    (method (process self))
    (method (invoke self kind method-name remote-proxy arguments))
    (method (invoke-live? self remote-proxy timeout))
    (method (result self rest))
    (method (execute self kind rest))
    (method (write-message self message))
    (method (read-message self)))
  (hub get-binary?)
  (hub get-thread)
  (hub set-thread)
  (hub get-remote-uuid)
  (hub get-invocations)
  (hub get-invocations-mutex)
  (hub get-closing?)
  (hub set-closing?)
  (definition default-listener-host)
  (definition default-listener-service)
  (definition public (get-remote-listener (purpose: purpose (unspecified))))
  (definition public (require-remote-listener (purpose: purpose (unspecified))))
  (definition public (listen-parameter))
  (definition public (host/service-parameter arg setting (default (unspecified))))
  (definition public (start-remote-presence (purpose: purpose (unspecified)) (host: host (unspecified)) (service: service (unspecified)) (alternate-service: alternate-service (unspecified))))
  (definition public (stop-remote-presence (purpose: purpose (unspecified))))
  (definition public (post-remote method-name remote-proxy . arguments))
  (definition public (send-remote method-name remote-proxy . arguments))
  (definition public (call-remote method-name remote-proxy . arguments))
  (definition public live-timeout)
  (definition package (remote-proxy-live? remote-proxy))
  (definition protected (set-presence-code code (purpose: purpose (unspecified))))
  (definition protected (set-presence-version version (purpose: purpose (unspecified))))
  (definition protected (set-presence-already-connected already-connected (purpose: purpose (unspecified))))
  (definition protected (set-presence-accept-handler accept-handler (purpose: purpose (unspecified))))
  (definition protected (set-presence-connect-handler connect-handler (purpose: purpose (unspecified))))
  (definition protected (set-presence-invoke-handler invoke-handler (purpose: purpose (unspecified))))
  (definition protected (set-presence-process-handler process-handler (purpose: purpose (unspecified))))
  (definition protected (set-presence-processing-handler processing-handler (purpose: purpose (unspecified))))
  (definition protected (set-presence-execute-handler execute-handler (purpose: purpose (unspecified))))
  (definition protected (reset-presence-process-handler (purpose: purpose (unspecified))))
  (definition protected (reset-presence-processing-handler (purpose: purpose (unspecified))))
  (definition public (get-local-register (purpose (unspecified))))
  (definition public (new-remote-register purpose uuid))
  (definition public (connect-remote-register host port (purpose: purpose (unspecified))))
  (definition public (connect-remote-reference host port reference (purpose: purpose (unspecified))))
  (definition public (get-remote-register remote-proxy))
  (definition public (register-proxy name proxy-class object (purpose (unspecified))))
  (definition public (proxy-connection-info client proxy))
  (definition public (connect-remote-proxy info))
  (definition public (disconnect-remote-proxy remote-proxy))
  (definition public (close-remote-proxy remote-proxy))
  (definition public (closing-remote-proxy remote-proxy))
  (definition public (closing-remote-proxy-safe remote-proxy))
  (definition public (closing-remote-connection-safe purpose uuid))
  (definition local-proxy-classes)
  (definition protected (register-local-proxy-class locator class))
  (definition protected (registered-local-proxy-class locator))
  (definition (local-proxy->locator proxy))
  (definition remote-proxy-classes)
  (definition protected (register-remote-proxy-class locator class))
  (definition protected (registered-remote-proxy-class locator))
  (definition public (ior? object))
  (definition public (ior=? x y))
  (definition public (ior-server=? x y))
  (definition public (host=? x y))
  (definition public (service=? x y))
  (definition public (reference=? x y))
  (definition public (ior->proxy ior))
  (definition public (proxy? object))
  (definition public (proxy=? x y))
  (definition public (proxy-server=? x y))
  (definition public (local-proxy? object))
  (definition public (local-proxy=? x y))
  (definition public (remote-proxy? object))
  (definition public (remote-proxy=? x y))
  (definition protected (remote-proxy->connection proxy))
  (definition protected (remote-proxy-connected? proxy))
  (definition protected *Mega-Patch*)
  (definition public (gc-protect obj))
  (definition protected (marshall-local-proxy proxy))
  (definition protected (marshall-remote-proxy proxy))
  (definition (encode-ior ior))
  (definition protected (unmarshall-proxy content))
  (definition (decode-ior content))
  (definition protected presence-title)
  (definition public (get-presence-title))
  (definition public (set-presence-title title))
  (definition protected presence-name)
  (definition public (get-presence-name))
  (definition protected debug-remote?)
  (definition protected debug-remote-blocking?)
  (definition protected debug-remote-io?)
  (definition protected debug-remote-seconds?)
  (definition protected debug-remote-simplify?)
  (definition protected debug-remote-ignore-presences)
  (definition protected debug-remote-ignore-methods)
  (definition protected (debug-remote-presence? presence))
  (definition protected (debug-remote-method? method-name))
  (definition protected (set-debug-remote? flag))
  (definition protected (set-debug-remote-blocking? flag))
  (definition protected (set-debug-remote-io? flag))
  (definition (caller-garble-hack))
  (definition (callee-garble-hack)))
