(module jazz.foreign.syntax jazz
  (import (jazz.core (phase syntax)))
  (import (jazz.dialect.classes.foundation))
  (hub get-arguments)
  (hub get-body)
  (hub get-c-type)
  (hub get-expansion)
  (hub get-form)
  (hub get-inclusions)
  (hub get-kind)
  (hub get-name)
  (hub get-pointer-types)
  (hub get-signature)
  (hub set-body)
  (hub set-pointer-types)
  (hub set-signature)
  (class C-Include extends Expression
    (slot name getter generate)
    (method override (initialize self name . rest))
    (method override (emit-expression self declaration walker resume environment backend)))
  (class C-Initialize extends Expression
    (slot name getter generate)
    (slot code getter generate)
    (method override (initialize self name code . rest))
    (method override (emit-expression self declaration walker resume environment backend)))
  (hub get-code)
  (class C-Declare extends Expression
    (slot name getter generate)
    (slot code getter generate)
    (method override (initialize self name code . rest))
    (method override (emit-expression self declaration walker resume environment backend)))
  (class C-Named-Declare-Declaration extends Declaration
    (slot code getter generate)
    (method override (initialize self . rest))
    (method override (emit-declaration self walker resume environment backend))
    (method override (expand-referenced-declaration self))
    (method override (outline-extract self meta)))
  (class C-Type-Declaration extends Declaration
    (slot form getter generate)
    (slot kind getter generate)
    (slot c-type getter generate)
    (slot expansion getter generate)
    (slot base-type getter generate)
    (slot pointer-types accessors generate)
    (slot inclusions getter generate)
    (slot c-to-scheme getter generate)
    (slot scheme-to-c getter generate)
    (slot cleanup getter generate)
    (slot declare-name getter generate)
    (method override (initialize self form . rest))
    (method override (get-declaration-inclusions self))
    (method override (emit-declaration self walker resume environment backend))
    (method override (expand-referenced-declaration self))
    (method override (outline-extract self meta)))
  (hub get-base-type)
  (hub get-c-to-scheme)
  (hub get-scheme-to-c)
  (hub get-cleanup)
  (hub get-declare-name)
  (definition public (resolve-c-type-reference walker resume declaration environment symbol))
  (syntax public c-structure)
  (syntax public c-union)
  (syntax public c-feature)
  (syntax public c-enumerant)
  (class C-Code extends Expression
    (slot code getter generate)
    (slot arguments getter generate)
    (method override (initialize self code arguments . rest))
    (method override (emit-expression self declaration walker resume environment backend)))
  (class C-Function extends Expression
    (slot expansion getter generate)
    (method override (initialize self expansion . rest))
    (method override (emit-expression self declaration walker resume environment backend)))
  (class C-Definition-Declaration extends Declaration
    (slot signature accessors generate)
    (slot parameter-types getter generate)
    (slot result-type getter generate)
    (slot c-name getter generate)
    (slot scope getter generate)
    (slot body accessors generate)
    (method override (initialize self . rest))
    (method override (walk-binding-validate-call self walker resume source-declaration operator arguments form-src))
    (method override (emit-declaration self walker resume environment backend))
    (method override (emit-binding-reference self source-declaration walker resume environment backend))
    (method override (outline-extract self meta))
    (method override (tree-fold self down up here seed environment)))
  (hub get-parameter-types)
  (hub get-result-type)
  (hub get-c-name)
  (hub get-scope)
  (syntax public c-callback)
  (syntax public c-constant)
  (syntax public c-enumeration)
  (syntax public c-external)
  (syntax public c-callable))
