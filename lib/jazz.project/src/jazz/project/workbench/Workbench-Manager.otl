(module jazz.project.workbench.Workbench-Manager jazz
  (import (jazz.action))
  (import (jazz.application))
  (import (jazz.catalog))
  (import (jazz.component))
  (import (jazz.debugger.jazz))
  (import (jazz.descriptor))
  (import (jazz.designer))
  (import (jazz.designer.ui))
  (import (jazz.designer.ui.menu))
  (import (jazz.doc))
  (import (jazz.document))
  (import (jazz.editor.jazz))
  (import (jazz.event))
  (import (jazz.feedback))
  (import (jazz.git.ui))
  (import (jazz.graphic))
  (import (jazz.groupware))
  (import (jazz.handler))
  (import (jazz.ide))
  (import (jazz.io))
  (import (jazz.markup))
  (import (jazz.menu))
  (import (jazz.outline))
  (import (jazz.preferences))
  (import (jazz.process))
  (import (jazz.project))
  (import (jazz.resource))
  (import (jazz.search))
  (import (jazz.template))
  (import (jazz.text))
  (import (jazz.time))
  (import (jazz.tree))
  (import (jazz.ui))
  (import (jazz.ui.dialog))
  (import (jazz.view))
  (import (jazz.workspace))
  (class Workbench-Manager extends Component-Editor implements Quit-Listener
    (definition class-form)
    (method meta override (set-class-form self form))
    (method meta override (get-class-form self))
    (method meta override (get-class-forms self))
    (method meta override (external-name self . rest))
    (method meta override (host-icon self))
    (method meta override (host-title self))
    (method override (install-in-host self host))
    (method override (get-tools-view self))
    (method override (focus-default self))
    (method package (get-tree self))
    (method override (new-document-controller self))
    (method override (install self rest))
    (method override (get-designer-class self))
    (method override (prepare-quit self))
    (method override (on-designer self evt))
    (method package (child-add self child parent))
    (method package (child-remove self child))
    (method override (remove-selection self selection))
    (method override (key-press self evt))
    (method (on-highlight-document self evt))
    (method (on-reload-workbench self evt))
    (method (on-add-project self evt))
    (method (on-add-document self evt))
    (method (on-add-directory self evt))
    (method (on-add-group self evt))
    (method (on-install-project self evt))
    (method (on-import-files self evt))
    (method (on-import-directory self evt))
    (method (on-synchronize-content self evt))
    (method (on-set-current-directory self evt))
    (method (on-update-catalog self evt))
    (method (on-update-dynamic self evt))
    (method (on-search-project self evt))
    (method (on-dependencies self evt))
    (method (on-explore-depot self evt))
    (method (on-edit-project self evt))
    (method (on-edit-descriptor self evt))
    (method (on-edit-documentation self evt))
    (method (on-activate self evt))
    (method (on-run self evt))
    (method (on-debug self evt))
    (method (on-launch self evt))
    (method (on-distribute self evt))
    (method (on-properties self evt))
    (method (highlight-document self))
    (method (highlight-document-component self component))
    (method public (select-current self))
    (method (select-project self))
    (method public (edit-current self))
    (method package (edit-selection self))
    (definition Workbench-File)
    (method (edit-workbench self))
    (method (edit-project self project))
    (method package (edit-descriptor self))
    (method package (edit-documentation self))
    (method package (add-project self))
    (method package (add-project-to self parent))
    (method package (add-document self))
    (method package (add-directory self))
    (method package (add-group self))
    (method package (install-project self file parent descendant?))
    (definition MaxFiles-Warning)
    (definition Ignored-Dirnames)
    (definition (import-filter? project file))
    (definition (filter-pathname? project pathname (filter: filter (unspecified))))
    (method (import-directory self current-directory?))
    (method (import-files self current-directory?))
    (method package (import-pathnames self project pathnames parent))
    (method (import-pathname self project pathname parent descendant? (filter: filter (unspecified)) (recursive?: recursive? (unspecified))))
    (method (import-content self project dir parent descendant? (filter: filter (unspecified)) (recursive?: recursive? (unspecified))))
    (method (default-import-directory self object (must-exist?: must-exist? (unspecified))))
    (method (with-import-directory self current-directory? object proc))
    (definition (extension-reference ext))
    (method package (ascendant-project self component))
    (method (synchronize-content self))
    (method (validate-pathnames self project pathnames))
    (method package (validate self iterate))
    (method package (set-project-active? self project flag))
    (method public (activate-selection self))
    (method (activate-object self object))
    (method (activate-project self project (traits: traits (unspecified))))
    (method (activate-descendant self project active-project active-traits))
    (method package (update-dynamic-dependencies self))
    (method (update-catalog self))
    (method (update-project-catalog self project))
    (method (update-project-catalogs self project))
    (method (search-project self))
    (method (explore-depot self))
    (method public (configure-current self))
    (method (update-project-title self project))
    (method public (run-current self))
    (method public (run-selection self))
    (method package (run-project self project))
    (method public (debug-current self (executable: executable (unspecified))))
    (method public (debug-selection self))
    (method package (debug-project self project (executable: executable (unspecified))))
    (method public (test-current self))
    (method public (validate-current self (executable: executable (unspecified))))
    (method public (validate-selection self))
    (method package (validate-project self project (executable: executable (unspecified))))
    (method public (launch-selection self))
    (method (on-build-current self evt))
    (method public (build-current self))
    (method (build-project self project))
    (method public (compile-current self))
    (method public (compile-moniker self moniker))
    (method (compile-file self moniker project-file))
    (method public (preprocess-current self))
    (method public (clean-current self))
    (method (clean-project self project))
    (method (on-distribute-current self evt))
    (method public (distribute-current self))
    (method (distribute-selection self))
    (method (distribute-project self project))
    (method (selected-object self))
    (method (selected-objects self))
    (method (selected-project self))
    (method (selected-concrete-project self))
    (method package (current-project self))
    (method public (new-menu self))
    (method (describe-state self pos)))
  (hub get-tree)
  (hub child-add)
  (hub child-remove)
  (hub select-current)
  (hub edit-current)
  (hub edit-selection)
  (hub edit-descriptor)
  (hub edit-documentation)
  (hub add-project)
  (hub add-project-to)
  (hub add-document)
  (hub add-directory)
  (hub add-group)
  (hub install-project)
  (hub import-pathnames)
  (hub ascendant-project)
  (hub validate)
  (hub set-project-active?)
  (hub activate-selection)
  (hub update-dynamic-dependencies)
  (hub configure-current)
  (hub run-current)
  (hub run-selection)
  (hub run-project)
  (hub debug-current)
  (hub debug-selection)
  (hub debug-project)
  (hub test-current)
  (hub validate-current)
  (hub validate-selection)
  (hub validate-project)
  (hub launch-selection)
  (hub build-current)
  (hub compile-current)
  (hub compile-moniker)
  (hub preprocess-current)
  (hub clean-current)
  (hub distribute-current)
  (hub current-project)
  (hub new-menu)
  (class Workbench-Manager-Controller extends Component-Editor-Controller
    (method override (document-status self)))
  (class Group-Menu extends Component-Menu
    (definition class-form)
    (method meta override (set-class-form self form))
    (method meta override (get-class-form self))
    (method meta override (get-class-forms self)))
  (class Project-Menu extends Component-Menu
    (definition class-form)
    (method meta override (set-class-form self form))
    (method meta override (get-class-form self))
    (method meta override (get-class-forms self)))
  (class Concrete-Project-Menu extends Project-Menu
    (definition class-form)
    (method meta override (set-class-form self form))
    (method meta override (get-class-form self))
    (method meta override (get-class-forms self)))
  (class Workbench-Menu extends Project-Menu
    (definition class-form)
    (method meta override (set-class-form self form))
    (method meta override (get-class-form self))
    (method meta override (get-class-forms self)))
  (class Element-Menu extends Component-Menu
    (definition class-form)
    (method meta override (set-class-form self form))
    (method meta override (get-class-form self))
    (method meta override (get-class-forms self))))
